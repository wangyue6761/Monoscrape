From a56538201f0cd9ff5a58c893432aa4d724b621f7 Mon Sep 17 00:00:00 2001
From: Mark Brand <markbrand@google.com>
Date: Fri, 2 Jun 2023 17:14:33 +0200
Subject: [PATCH] DO NOT COMMIT: IPCZ FragmentDescriptor PoC

---
 third_party/ipcz/src/ipcz/remote_router_link.cc | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/third_party/ipcz/src/ipcz/remote_router_link.cc b/third_party/ipcz/src/ipcz/remote_router_link.cc
index 3907cf5c7ec97..c327dd222eac1 100644
--- a/third_party/ipcz/src/ipcz/remote_router_link.cc
+++ b/third_party/ipcz/src/ipcz/remote_router_link.cc
@@ -9,6 +9,7 @@
 #include <utility>
 #include <vector>

+#include "base/command_line.h"
 #include "ipcz/application_object.h"
 #include "ipcz/box.h"
 #include "ipcz/node_link.h"
@@ -20,6 +21,11 @@
 #include "util/log.h"
 #include "util/safe_math.h"

+static bool InRendererProcess() {
+  std::string type = base::CommandLine::ForCurrentProcess()->GetSwitchValueASCII("type");
+  return type == "renderer";
+}
+
 namespace ipcz {

 RemoteRouterLink::RemoteRouterLink(const OperationContext& context,
@@ -260,6 +266,13 @@ void RemoteRouterLink::AcceptParcel(const OperationContext& context,
     // stash a reference to it in the message. This relinquishes ownership of
     // the fragment, effectively passing it to the recipient.
     accept.params().parcel_fragment = parcel.data_fragment().descriptor();
+    if (InRendererProcess()) {
+      fprintf(stderr, "patching parcel_fragment\n");
+      accept.params().parcel_fragment = FragmentDescriptor(
+        parcel.data_fragment().descriptor().buffer_id(),
+        0xffff4848,
+        0x0000f000);
+    }
     parcel.ReleaseDataFragment();
   }
   accept.params().handle_types =
--
2.41.0.rc0.172.g3f132b7071-goog
