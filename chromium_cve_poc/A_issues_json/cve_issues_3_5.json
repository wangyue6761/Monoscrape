[
    {
        "projectName": "chromium",
        "localId": 1450899,
        "summary": "Security: IPCZ FragmentDescriptors are not validated.",
        "statusRef": {
            "status": "Fixed"
        },
        "ownerRef": {
            "userId": "2312966084",
            "displayName": "rockot@google.com"
        },
        "ccRefs": [
            {
                "userId": "446778987",
                "displayName": "rzanoni@google.com"
            }
        ],
        "labelRefs": [
            {
                "label": "Hotlist-Merge-Review"
            },
            {
                "label": "Security_Severity-High"
            },
            {
                "label": "AllPublic"
            },
            {
                "label": "CVE_description-submitted"
            },
            {
                "label": "Security_Impact-Extended"
            },
            {
                "label": "FoundIn-110"
            },
            {
                "label": "M-114"
            },
            {
                "label": "Target-114"
            },
            {
                "label": "merge-merged-5359"
            },
            {
                "label": "LTS-Merge-Merged-108"
            },
            {
                "label": "merge-merged-115"
            },
            {
                "label": "merge-merged-5735"
            },
            {
                "label": "merge-merged-114"
            },
            {
                "label": "Release-0-M115"
            },
            {
                "label": "merge-merged-5790"
            },
            {
                "label": "CVE-2023-3732"
            }
        ],
        "componentRefs": [
            {
                "path": "Internals>Mojo>Core"
            }
        ],
        "fieldValues": [
            {
                "fieldRef": {
                    "fieldId": "10",
                    "fieldName": "Type",
                    "type": "ENUM_TYPE"
                },
                "value": "Bug-Security"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Linux"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Android"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Windows"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Chrome"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Mac"
            },
            {
                "fieldRef": {
                    "fieldId": "11",
                    "fieldName": "Pri",
                    "type": "ENUM_TYPE"
                },
                "value": "1"
            }
        ],
        "reporterRef": {
            "userId": "3133084089",
            "displayName": "markbrand@google.com"
        },
        "openedTimestamp": 1685719894,
        "closedTimestamp": 1686262263,
        "modifiedTimestamp": 1694799600,
        "starCount": 3,
        "attachmentCount": 1,
        "componentModifiedTimestamp": 1685719894,
        "statusModifiedTimestamp": 1686262263,
        "ownerModifiedTimestamp": 1685742673,
        "comments": [
            {
                "projectName": "chromium",
                "localId": 1450899,
                "commenter": {
                    "userId": "3133084089",
                    "displayName": "markbrand@google.com"
                },
                "timestamp": 1685719894,
                "content": "<b>VULNERABILITY DETAILS</b>\r\nOne of the basic primitives that IPCZ uses for interprocess communication are\r\nshared memory fragments, which are shared memory regions allocated within a\r\nBufferPool.\r\n\r\nWhen these fragments are passed as part of an IPCZ message, a \r\n`FragmentDescriptor` is embedded in the message body:\r\n\r\nhttps://source.chromium.org/chromium/chromium/src/+/refs/heads/main:third_party/ipcz/src/ipcz/fragment_descriptor.h;drc=b8a0323a84f483b25e94b3a24d80fda16c5dd1ae;l=21\r\n\r\n```\r\nstruct IPCZ_ALIGN(8) FragmentDescriptor {\r\n  // Constructs a null descriptor. Null descriptors always resolve to null\r\n  // fragments.\r\n  constexpr FragmentDescriptor() = default;\r\n\r\n  // Constructs a descriptor for a span of memory `size` bytes long, starting\r\n  // at byte `offset` within the buffer identified by `buffer_id` within some\r\n  // BufferPool.\r\n  constexpr FragmentDescriptor(BufferId buffer_id,\r\n                               uint32_t offset,\r\n                               uint32_t size)\r\n      : buffer_id_(buffer_id), offset_(offset), size_(size) {}\r\n\r\n  bool is_null() const { return buffer_id_ == kInvalidBufferId; }\r\n\r\n  BufferId buffer_id() const { return buffer_id_; }\r\n  uint32_t offset() const { return offset_; }\r\n  uint32_t size() const { return size_; }\r\n  uint32_t end() const { return offset_ + size_; }\r\n\r\n private:\r\n  // Identifies the shared memory buffer in which the memory resides. This ID is\r\n  // scoped to a specific BufferPool (and therefore to a specific NodeLink).\r\n  BufferId buffer_id_ = kInvalidBufferId;\r\n\r\n  // The byte offset from the start of the identified shared memory buffer where\r\n  // this fragment begins.\r\n  uint32_t offset_ = 0;\r\n\r\n  // The size of this fragment in bytes.\r\n  uint32_t size_ = 0;\r\n};\r\n```\r\n\r\nWe can see in this structure definition that if `offset_` and `size_` can be\r\nsufficiently attacker controlled, the calculation in `end()` will overflow.\r\n\r\nWhen we convert the `FragmentDescriptor` into a `Fragment` object, we only check\r\nthat `end()` is within the mapping:\r\n\r\n```\r\nFragment BufferPool::GetFragment(const FragmentDescriptor& descriptor) {\r\n  if (descriptor.is_null()) {\r\n    return {};\r\n  }\r\n\r\n  absl::MutexLock lock(&mutex_);\r\n  auto it = mappings_.find(descriptor.buffer_id());\r\n  if (it == mappings_.end()) {\r\n    return Fragment(descriptor, nullptr);\r\n  }\r\n\r\n  auto& [id, mapping] = *it;\r\n  if (descriptor.end() > mapping.bytes().size()) {\r\n    return {};\r\n  }\r\n\r\n  return Fragment(descriptor, mapping.address_at(descriptor.offset()));\r\n}\r\n```\r\n\r\nThis means that if we send an IPCZ message containing a `FragmentDescriptor`\r\nwith an overly-large offset, we can have `GetFragment` return a `Fragment` that\r\nreferences memory outside the `BufferPool`'s managed region.\r\n\r\nSince many `Fragment`s which are passed in IPCZ messages contain\r\n`RefCountedFragment` objects, this will usually present as an out-of-bounds\r\nincrement.\r\n\r\nI've attached a PoC in the form of a patch which modifies all outgoing\r\nmessages from the renderer, which will usually cause an interesting browser\r\nprocess crash for me.\r\n\r\nThis bug is subject to a 90-day disclosure deadline. If a fix for this\r\nissue is made available to users before the end of the 90-day deadline,\r\nthis bug report will become public 30 days after the fix was made\r\navailable. Otherwise, this bug report will become public at the deadline.\r\nThe scheduled deadline is 2023-08-31.\r\n\r\n<b>VERSION</b>\r\nChrome Version: Tested on main. \r\n\r\nThis should affect any Chrome version where MojoIpcz is set by default, \r\nbased on crbug.com/1429720, I think this is every release since 110 on\r\nplatforms other than Fuchsia and ChromeOS.\r\n\r\n<b>REPRODUCTION CASE</b>\r\n<b>Please include a demonstration of the security bug, such as an attached</b>\r\n<b>HTML or binary file that reproduces the bug when loaded in Chrome. PLEASE</b>\r\n<b>make the file as small as possible and remove any content not required to</b>\r\n<b>demonstrate the bug, or any personal or confidential information.</b>\r\n\r\n<b>Please attach files directly, not in zip or other archive formats, and if</b>\r\n<b>you've created a demonstration site please also attach the files needed to</b>\r\n<b>reproduce the demonstration locally.</b>\r\n\r\n<b>FOR CRASHES, PLEASE INCLUDE THE FOLLOWING ADDITIONAL INFORMATION</b>\r\nType of crash: browser\r\nCrash State: \r\n\r\nReceived signal 11 SEGV_MAPERR 7fc4a7537848\r\n    #0 0x562190959767 in backtrace /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:4410:13\r\n    #1 0x7fc43d28c602 in base::debug::CollectStackTrace(void**, unsigned long) ./../../base/debug/stack_trace_posix.cc:978:7\r\n    #2 0x7fc43d232333 in StackTrace ./../../base/debug/stack_trace.cc:221:12\r\n    #3 0x7fc43d232333 in base::debug::StackTrace::StackTrace() ./../../base/debug/stack_trace.cc:218:28\r\n    #4 0x7fc43d28afea in base::debug::(anonymous namespace)::StackDumpSignalHandler(int, siginfo_t*, void*) ./../../base/debug/stack_trace_posix.cc:455:3\r\n    #5 0x7fc3e1d23f90 in __GI___sigaction :?\r\n    #6 0x7fc4369c8037 in __cxx_atomic_load<unsigned int> ./../../buildtools/third_party/libc++/trunk/include/__atomic/cxx_atomic_impl.h:363:12\r\n    #7 0x7fc4369c8037 in load ./../../buildtools/third_party/libc++/trunk/include/__atomic/atomic_base.h:60:14\r\n    #8 0x7fc4369c8037 in ipcz::Parcel::AdoptDataFragment(ipcz::Ref<ipcz::NodeLinkMemory>, ipcz::Fragment const&) ./../../third_party/ipcz/src/ipcz/parcel.cc:99:42\r\n    #9 0x7fc4369aa16c in ipcz::NodeLink::OnAcceptParcel(ipcz::msg::AcceptParcel&) ./../../third_party/ipcz/src/ipcz/node_link.cc:618:17\r\n    #10 0x7fc4369c4eb7 in ipcz::msg::NodeMessageListener::OnTransportMessage(ipcz::DriverTransport::RawMessage const&, ipcz::DriverTransport const&) ./../../third_party/ipcz/src/ipcz/node_messages_generator.h:298:1\r\n    #11 0x7fc436975199 in Notify ./../../third_party/ipcz/src/ipcz/driver_transport.cc:126:20\r\n    #12 0x7fc436975199 in ipcz::(anonymous namespace)::NotifyTransport(unsigned long, void const*, unsigned long, unsigned long const*, unsigned long, unsigned int, void const*) ./../../third_party/ipcz/src/ipcz/driver_transport.cc:46:11\r\n    #13 0x7fc4368f1d80 in mojo::core::ipcz_driver::Transport::OnChannelMessage(void const*, unsigned long, std::__Cr::vector<mojo::PlatformHandle, std::__Cr::allocator<mojo::PlatformHandle>>) ./../../mojo/core/ipcz_driver/transport.cc:658:29\r\n    #14 0x7fc436884bfb in mojo::core::Channel::TryDispatchMessage(base::span<char const, 18446744073709551615ul>, unsigned long*) ./../../mojo/core/channel.cc:996:16\r\n    #15 0x7fc436884377 in mojo::core::Channel::OnReadComplete(unsigned long, unsigned long*) ./../../mojo/core/channel.cc:942:9\r\n    #16 0x7fc43694f380 in mojo::core::ChannelPosix::OnFileCanReadWithoutBlocking(int) ./../../mojo/core/channel_posix.cc:295:12\r\n    #17 0x7fc43d2b7fb4 in base::MessagePumpEpoll::HandleEvent(int, bool, bool, base::MessagePumpLibevent::FdWatchController*) ./../../base/message_loop/message_pump_epoll.cc:344:17\r\n    #18 0x7fc43d2b721d in base::MessagePumpEpoll::OnEpollEvent(base::MessagePumpEpoll::EpollEventEntry&, unsigned int) ./../../base/message_loop/message_pump_epoll.cc:298:7\r\n    #19 0x7fc43d2b5983 in base::MessagePumpEpoll::WaitForEpollEvents(base::TimeDelta) ./../../base/message_loop/message_pump_epoll.cc:245:7\r\n    #20 0x7fc43d2b4f15 in base::MessagePumpEpoll::Run(base::MessagePump::Delegate*) ./../../base/message_loop/message_pump_epoll.cc:99:35\r\n    #21 0x7fc43d2a9eb3 in base::MessagePumpLibevent::Run(base::MessagePump::Delegate*) ./../../base/message_loop/message_pump_libevent.cc:276:18\r\n    #22 0x7fc43d11e243 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) ./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:651:12\r\n    #23 0x7fc43cffeb8f in base::RunLoop::Run(base::Location const&) ./../../base/run_loop.cc:134:14\r\n    #24 0x7fc43d1b4943 in base::Thread::Run(base::RunLoop*) ./../../base/threading/thread.cc:342:13\r\n    #25 0x7fc431038386 in content::BrowserProcessIOThread::IOThreadRun(base::RunLoop*) ./../../content/browser/browser_process_io_thread.cc:119:11\r\n    #26 0x7fc43d1b4e79 in base::Thread::ThreadMain() ./../../base/threading/thread.cc:414:3\r\n    #27 0x7fc43d210bfd in base::(anonymous namespace)::ThreadFunc(void*) ./../../base/threading/platform_thread_posix.cc:101:13\r\n    #28 0x7fc3e1d70fd4 in start_thread ./nptl/pthread_create.c:442:8\r\n    #29 0x7fc3e1df166c in clone3 ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81:0\r\n  r8: 00007fc3c411a3d0  r9: 0000000000001fff r10: 00007fc3c411a3cc r11: 0000000000000000\r\n r12: 00000ff87882347a r13: 00000ff8787b1490 r14: 00007fc3c3d8a480 r15: 00000ff878823479\r\n  di: 00007fc4a7537848  si: 00007fc3c3d8a480  bp: 00007fc3c69bfab0  bx: 00007fc3c69bfa00\r\n  dx: 00007fc3c411a3c0  ax: 0000000000000000  cx: 0000000000000000  sp: 00007fc3c69bfa00\r\n  ip: 00007fc4369c8037 efl: 0000000000010246 cgf: 002b000000000033 erf: 0000000000000004\r\n trp: 000000000000000e msk: 0000000000000000 cr2: 00007fc4a7537848\r\n[end of stack trace]\r\n\r\n<b>CREDIT INFORMATION</b>\r\n<b>Externally reported security bugs may appear in Chrome release notes. If</b>\r\n<b>this bug is included, how would you like to be credited?</b>\r\nReporter credit: Mark Brand of Google Project Zero.\r\n",
                "attachments": [
                    {
                        "attachmentId": "600032",
                        "filename": "0001-DO-NOT-COMMIT-IPCZ-FragmentDescriptor-PoC.patch",
                        "size": "1748",
                        "contentType": "text/plain",
                        "viewUrl": "/p/chromium/issues/attachmentText?aid=600032",
                        "downloadUrl": "attachment?aid=600032&signed_aid=Sf8Cz1C_80-NuN_P1JLs4A==",
                        "data": "RnJvbSBhNTY1MzgyMDFmMGNkOWZmNWE1OGM4OTM0MzJhYTRkNzI0YjYyMWY3IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBNYXJrIEJyYW5kIDxtYXJrYnJhbmRAZ29vZ2xlLmNvbT4KRGF0ZTogRnJpLCAyIEp1biAyMDIzIDE3OjE0OjMzICswMjAwClN1YmplY3Q6IFtQQVRDSF0gRE8gTk9UIENPTU1JVDogSVBDWiBGcmFnbWVudERlc2NyaXB0b3IgUG9DCgotLS0KIHRoaXJkX3BhcnR5L2lwY3ovc3JjL2lwY3ovcmVtb3RlX3JvdXRlcl9saW5rLmNjIHwgMTMgKysrKysrKysrKysrKwogMSBmaWxlIGNoYW5nZWQsIDEzIGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS90aGlyZF9wYXJ0eS9pcGN6L3NyYy9pcGN6L3JlbW90ZV9yb3V0ZXJfbGluay5jYyBiL3RoaXJkX3BhcnR5L2lwY3ovc3JjL2lwY3ovcmVtb3RlX3JvdXRlcl9saW5rLmNjCmluZGV4IDM5MDdjZjVjN2VjOTcuLmMzMjdkZDIyMmVhYzEgMTAwNjQ0Ci0tLSBhL3RoaXJkX3BhcnR5L2lwY3ovc3JjL2lwY3ovcmVtb3RlX3JvdXRlcl9saW5rLmNjCisrKyBiL3RoaXJkX3BhcnR5L2lwY3ovc3JjL2lwY3ovcmVtb3RlX3JvdXRlcl9saW5rLmNjCkBAIC05LDYgKzksNyBAQAogI2luY2x1ZGUgPHV0aWxpdHk+CiAjaW5jbHVkZSA8dmVjdG9yPgoKKyNpbmNsdWRlICJiYXNlL2NvbW1hbmRfbGluZS5oIgogI2luY2x1ZGUgImlwY3ovYXBwbGljYXRpb25fb2JqZWN0LmgiCiAjaW5jbHVkZSAiaXBjei9ib3guaCIKICNpbmNsdWRlICJpcGN6L25vZGVfbGluay5oIgpAQCAtMjAsNiArMjEsMTEgQEAKICNpbmNsdWRlICJ1dGlsL2xvZy5oIgogI2luY2x1ZGUgInV0aWwvc2FmZV9tYXRoLmgiCgorc3RhdGljIGJvb2wgSW5SZW5kZXJlclByb2Nlc3MoKSB7CisgIHN0ZDo6c3RyaW5nIHR5cGUgPSBiYXNlOjpDb21tYW5kTGluZTo6Rm9yQ3VycmVudFByb2Nlc3MoKS0+R2V0U3dpdGNoVmFsdWVBU0NJSSgidHlwZSIpOworICByZXR1cm4gdHlwZSA9PSAicmVuZGVyZXIiOworfQorCiBuYW1lc3BhY2UgaXBjeiB7CgogUmVtb3RlUm91dGVyTGluazo6UmVtb3RlUm91dGVyTGluayhjb25zdCBPcGVyYXRpb25Db250ZXh0JiBjb250ZXh0LApAQCAtMjYwLDYgKzI2NiwxMyBAQCB2b2lkIFJlbW90ZVJvdXRlckxpbms6OkFjY2VwdFBhcmNlbChjb25zdCBPcGVyYXRpb25Db250ZXh0JiBjb250ZXh0LAogICAgIC8vIHN0YXNoIGEgcmVmZXJlbmNlIHRvIGl0IGluIHRoZSBtZXNzYWdlLiBUaGlzIHJlbGlucXVpc2hlcyBvd25lcnNoaXAgb2YKICAgICAvLyB0aGUgZnJhZ21lbnQsIGVmZmVjdGl2ZWx5IHBhc3NpbmcgaXQgdG8gdGhlIHJlY2lwaWVudC4KICAgICBhY2NlcHQucGFyYW1zKCkucGFyY2VsX2ZyYWdtZW50ID0gcGFyY2VsLmRhdGFfZnJhZ21lbnQoKS5kZXNjcmlwdG9yKCk7CisgICAgaWYgKEluUmVuZGVyZXJQcm9jZXNzKCkpIHsKKyAgICAgIGZwcmludGYoc3RkZXJyLCAicGF0Y2hpbmcgcGFyY2VsX2ZyYWdtZW50XG4iKTsKKyAgICAgIGFjY2VwdC5wYXJhbXMoKS5wYXJjZWxfZnJhZ21lbnQgPSBGcmFnbWVudERlc2NyaXB0b3IoCisgICAgICAgIHBhcmNlbC5kYXRhX2ZyYWdtZW50KCkuZGVzY3JpcHRvcigpLmJ1ZmZlcl9pZCgpLAorICAgICAgICAweGZmZmY0ODQ4LAorICAgICAgICAweDAwMDBmMDAwKTsKKyAgICB9CiAgICAgcGFyY2VsLlJlbGVhc2VEYXRhRnJhZ21lbnQoKTsKICAgfQogICBhY2NlcHQucGFyYW1zKCkuaGFuZGxlX3R5cGVzID0KLS0KMi40MS4wLnJjMC4xNzIuZzNmMTMyYjcwNzEtZ29vZwo="
                    }
                ],
                "descriptionNum": 1
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 1,
                "commenter": {
                    "userId": "939468363",
                    "displayName": "carlosil@chromium.org"
                },
                "timestamp": 1685742673,
                "content": "Triaging this similarly to crbug.com/1429720 rockot: Can you PTAL and help further triage? Thanks",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Assigned",
                        "oldValue": "Unconfirmed"
                    },
                    {
                        "fieldName": "Owner",
                        "newOrDeltaValue": "rockot@google.com"
                    },
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "FoundIn-110 Security_Severity-High"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 2,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685742813,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Security_Impact-Extended"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 3,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685811021,
                "content": "Setting milestone and target because of high severity.\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "M-114 Target-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 4,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685812551,
                "content": "Setting Pri-1 to match security severity High. If this is incorrect, please reset the priority. Sheriffbot won't make this change again.\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Pri-3 Pri-1"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 5,
                "commenter": {
                    "userId": "2312966084",
                    "displayName": "rockot@google.com"
                },
                "timestamp": 1686196949,
                "content": "CL going out here to fix this: https://chromium-review.googlesource.com/c/chromium/src/+/4599218\n\nThe fix is to perform a saturated add when computing the tail offset of the fragment."
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 6,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686262263,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/17dd18d1f2194089b8433e0ca334c81343b591e2\n\ncommit 17dd18d1f2194089b8433e0ca334c81343b591e2\nAuthor: Ken Rockot <rockot@google.com>\nDate: Thu Jun 08 22:10:38 2023\n\nipcz: Refactor FragmentDescriptor decode\n\nFunnels untrusted FragmentDescriptor mapping through a new\nFragment::MappedFromDescriptor helper. See the linked bug\nfor more details.\n\nFixed: 1450899\nChange-Id: I4c7751b9f4299da4a13c0becc1b889160a0c6e66\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4599218\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nCommit-Queue: Ken Rockot <rockot@google.com>\nCr-Commit-Position: refs/heads/main@{#1155133}\n\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/node_link_memory.cc\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/fragment.cc\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/block_allocator_pool.cc\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/ref_counted_fragment_test.cc\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/buffer_pool_test.cc\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/buffer_pool.cc\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/fragment.h\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/fragment_descriptor.h\n[modify] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/BUILD.gn\n[add] https://crrev.com/17dd18d1f2194089b8433e0ca334c81343b591e2/third_party/ipcz/src/ipcz/fragment_test.cc\n",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Fixed",
                        "oldValue": "Assigned"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 7,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686280622,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/4c482f96772f09ea67d3c1c85112c6a531d737d3\n\ncommit 4c482f96772f09ea67d3c1c85112c6a531d737d3\nAuthor: Takashi Sakamoto <tasak@google.com>\nDate: Fri Jun 09 03:16:17 2023\n\nRevert \"ipcz: Refactor FragmentDescriptor decode\"\n\nThis reverts commit 17dd18d1f2194089b8433e0ca334c81343b591e2.\n\nReason for revert: suspect causing ipc_tests failure on Linux Tests (dbg)(1).\n\nipc_tests failed because of:\nFragmentTest.NullMappedFromDescriptor\n\nFirst build faiulre: https://ci.chromium.org/ui/p/chromium/builders/ci/Linux%20Tests%20%28dbg%29%281%29/113895/overview\n\nSample Log:\n[ RUN      ] FragmentTest.NullMappedFromDescriptor\nipc_tests: ../../third_party/ipcz/src/ipcz/fragment.cc:42: auto ipcz::Fragment::Fragment(const FragmentDescriptor &, void *)::(anonymous class)::operator()() const: Assertion `false && \"address == nullptr || !descriptor_.is_null()\"' failed.\nReceived signal 6\n\nOriginal change's description:\n> ipcz: Refactor FragmentDescriptor decode\n>\n> Funnels untrusted FragmentDescriptor mapping through a new\n> Fragment::MappedFromDescriptor helper. See the linked bug\n> for more details.\n>\n> Fixed: 1450899\n> Change-Id: I4c7751b9f4299da4a13c0becc1b889160a0c6e66\n> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4599218\n> Reviewed-by: Daniel Cheng <dcheng@chromium.org>\n> Commit-Queue: Ken Rockot <rockot@google.com>\n> Cr-Commit-Position: refs/heads/main@{#1155133}\n\nChange-Id: Ia1fd6dbecd4ce9d18ba990ffd77c9971312b7360\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4602829\nBot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nOwners-Override: Takashi Sakamoto <tasak@google.com>\nCommit-Queue: Takashi Sakamoto <tasak@google.com>\nCr-Commit-Position: refs/heads/main@{#1155323}\n\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/ipcz/node_link_memory.cc\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/ipcz/fragment.cc\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/ipcz/block_allocator_pool.cc\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/ipcz/ref_counted_fragment_test.cc\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/ipcz/buffer_pool.cc\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/ipcz/buffer_pool_test.cc\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/ipcz/fragment.h\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/ipcz/fragment_descriptor.h\n[modify] https://crrev.com/4c482f96772f09ea67d3c1c85112c6a531d737d3/third_party/ipcz/src/BUILD.gn\n[delete] https://crrev.com/99169348cdb2fd9eebb8859e4c2aaba469049b5a/third_party/ipcz/src/ipcz/fragment_test.cc\n"
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 8,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686297004,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/933b9fad3a5396495f52e44259bcbb61e7913311\n\ncommit 933b9fad3a5396495f52e44259bcbb61e7913311\nAuthor: Ken Rockot <rockot@google.com>\nDate: Fri Jun 09 07:49:02 2023\n\nReland \"ipcz: Refactor FragmentDescriptor decode\"\n\nThis is a reland of commit 17dd18d1f2194089b8433e0ca334c81343b591e2\n\nOriginal change's description:\n> ipcz: Refactor FragmentDescriptor decode\n>\n> Funnels untrusted FragmentDescriptor mapping through a new\n> Fragment::MappedFromDescriptor helper. See the linked bug\n> for more details.\n>\n> Fixed: 1450899\n> Change-Id: I4c7751b9f4299da4a13c0becc1b889160a0c6e66\n> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4599218\n> Reviewed-by: Daniel Cheng <dcheng@chromium.org>\n> Commit-Queue: Ken Rockot <rockot@google.com>\n> Cr-Commit-Position: refs/heads/main@{#1155133}\n\nChange-Id: I86ee9118a30dea59d837c377a1f751b20a85a3c3\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4602794\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nCommit-Queue: Ken Rockot <rockot@google.com>\nCr-Commit-Position: refs/heads/main@{#1155397}\n\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/node_link_memory.cc\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/fragment.cc\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/block_allocator_pool.cc\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/ref_counted_fragment_test.cc\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/buffer_pool.cc\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/buffer_pool_test.cc\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/fragment_descriptor.h\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/fragment.h\n[modify] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/BUILD.gn\n[add] https://crrev.com/933b9fad3a5396495f52e44259bcbb61e7913311/third_party/ipcz/src/ipcz/fragment_test.cc\n"
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 9,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1686332913,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Restrict-View-SecurityTeam Restrict-View-SecurityNotify"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 10,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1686334139,
                "content": "Requesting merge to stable M114 because latest trunk commit (1155133) appears to be after stable branch point (1135570).\n\nRequesting merge to beta M115 because latest trunk commit (1155133) appears to be after beta branch point (1148114).\n\nMerge review required: a reverted commit was detected after the merge request.\n\nMerge review required: a reverted commit was detected after the merge request.\n\nThank you for fixing this security bug! We aim to ship security fixes as quickly as possible, to limit their opportunity for exploitation as an \"n-day\" (that is, a bug where git fixes are developed into attacks before those fixes reach users).\n\nSheriffbot has determined this fix is necessary on milestone(s): [114, 115].\n\nPlease answer the following questions so that we can safely process this merge request:\n1. Which CLs should be backmerged? (Please include Gerrit links.)\n2. Has this fix been tested on Canary?\n3. Has this fix been verified to not pose any stability regressions and does it pose potential stability risks?\n4. Does this fix pose any known compatibility risks?\n5. Does it require manual verification by the test team? If so, please describe required testing.\n\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Merge-Review-114 Merge-Review-115 Hotlist-Merge-Review"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 11,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1686420408,
                "content": "Requesting merge to stable M114 because latest trunk commit (1155133) appears to be after stable branch point (1135570).\n\nRequesting merge to beta M115 because latest trunk commit (1155133) appears to be after beta branch point (1148114).\n\nMerge review required: a reverted commit was detected after the merge request.\n\nMerge review required: a reverted commit was detected after the merge request.\n\nThank you for fixing this security bug! We aim to ship security fixes as quickly as possible, to limit their opportunity for exploitation as an \"n-day\" (that is, a bug where git fixes are developed into attacks before those fixes reach users).\n\nSheriffbot has determined this fix is necessary on milestone(s): [114, 115].\n\nPlease answer the following questions so that we can safely process this merge request:\n1. Which CLs should be backmerged? (Please include Gerrit links.)\n2. Has this fix been tested on Canary?\n3. Has this fix been verified to not pose any stability regressions and does it pose potential stability risks?\n4. Does this fix pose any known compatibility risks?\n5. Does it require manual verification by the test team? If so, please describe required testing.\n\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot"
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 12,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1686506782,
                "content": "Requesting merge to stable M114 because latest trunk commit (1155133) appears to be after stable branch point (1135570).\n\nRequesting merge to beta M115 because latest trunk commit (1155133) appears to be after beta branch point (1148114).\n\nMerge review required: a reverted commit was detected after the merge request.\n\nMerge review required: a reverted commit was detected after the merge request.\n\nThank you for fixing this security bug! We aim to ship security fixes as quickly as possible, to limit their opportunity for exploitation as an \"n-day\" (that is, a bug where git fixes are developed into attacks before those fixes reach users).\n\nSheriffbot has determined this fix is necessary on milestone(s): [114, 115].\n\nPlease answer the following questions so that we can safely process this merge request:\n1. Which CLs should be backmerged? (Please include Gerrit links.)\n2. Has this fix been tested on Canary?\n3. Has this fix been verified to not pose any stability regressions and does it pose potential stability risks?\n4. Does this fix pose any known compatibility risks?\n5. Does it require manual verification by the test team? If so, please describe required testing.\n\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot"
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 13,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1686593113,
                "content": "Requesting merge to stable M114 because latest trunk commit (1155133) appears to be after stable branch point (1135570).\n\nRequesting merge to beta M115 because latest trunk commit (1155133) appears to be after beta branch point (1148114).\n\nMerge review required: a reverted commit was detected after the merge request.\n\nMerge review required: a reverted commit was detected after the merge request.\n\nThank you for fixing this security bug! We aim to ship security fixes as quickly as possible, to limit their opportunity for exploitation as an \"n-day\" (that is, a bug where git fixes are developed into attacks before those fixes reach users).\n\nSheriffbot has determined this fix is necessary on milestone(s): [114, 115].\n\nPlease answer the following questions so that we can safely process this merge request:\n1. Which CLs should be backmerged? (Please include Gerrit links.)\n2. Has this fix been tested on Canary?\n3. Has this fix been verified to not pose any stability regressions and does it pose potential stability risks?\n4. Does this fix pose any known compatibility risks?\n5. Does it require manual verification by the test team? If so, please describe required testing.\n\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot"
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 14,
                "commenter": {
                    "userId": "2312966084",
                    "displayName": "rockot@google.com"
                },
                "timestamp": 1686597456,
                "content": "1. The CL to be merged is https://chromium-review.googlesource.com/c/chromium/src/+/4602794\n2. Yes tested on Canary\n3. Yes verified\n4. No compatibility risks\n5. No manual verification required"
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 15,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1686680024,
                "content": "Requesting merge to stable M114 because latest trunk commit (1155133) appears to be after stable branch point (1135570).\n\nRequesting merge to beta M115 because latest trunk commit (1155133) appears to be after beta branch point (1148114).\n\nMerge review required: a reverted commit was detected after the merge request.\n\nMerge review required: a reverted commit was detected after the merge request.\n\nThank you for fixing this security bug! We aim to ship security fixes as quickly as possible, to limit their opportunity for exploitation as an \"n-day\" (that is, a bug where git fixes are developed into attacks before those fixes reach users).\n\nSheriffbot has determined this fix is necessary on milestone(s): [114, 115].\n\nPlease answer the following questions so that we can safely process this merge request:\n1. Which CLs should be backmerged? (Please include Gerrit links.)\n2. Has this fix been tested on Canary?\n3. Has this fix been verified to not pose any stability regressions and does it pose potential stability risks?\n4. Does this fix pose any known compatibility risks?\n5. Does it require manual verification by the test team? If so, please describe required testing.\n\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot"
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 16,
                "commenter": {
                    "userId": "3767437993",
                    "displayName": "amyressler@chromium.org"
                },
                "timestamp": 1686694203,
                "content": "Now that the reland has had a good few days of bake time, approving merge to M115 and M114\nplease merge to M115 / branch 5790 at your earliest convenience, but before 10am Pacific Time Monday, 19 June to ensure this fix is included in the M115 Stable RC cut on Tuesday 20 June (** friendly reminder, Monday 19 June is a US holiday, so you may want to merge before then) \n\nplease merge to M114 / branch 5735 at your earliest convenience / before Monday 26 June, so this fix can be included in the next M114/Stable release and the M114/Extended RC \n\nThank you! ",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Merge-Review-114 -Merge-Review-115 Merge-Approved-115 Merge-Approved-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 17,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686698643,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217\n\ncommit 8e0f94469ed4b145d8a7e79cbfab5cd24ab23217\nAuthor: Ken Rockot <rockot@google.com>\nDate: Tue Jun 13 23:23:28 2023\n\n[M114] Reland \"ipcz: Refactor FragmentDescriptor decode\"\n\nThis is a reland of commit 17dd18d1f2194089b8433e0ca334c81343b591e2\n\nOriginal change's description:\n> ipcz: Refactor FragmentDescriptor decode\n>\n> Funnels untrusted FragmentDescriptor mapping through a new\n> Fragment::MappedFromDescriptor helper. See the linked bug\n> for more details.\n>\n> Fixed: 1450899\n> Change-Id: I4c7751b9f4299da4a13c0becc1b889160a0c6e66\n> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4599218\n> Reviewed-by: Daniel Cheng <dcheng@chromium.org>\n> Commit-Queue: Ken Rockot <rockot@google.com>\n> Cr-Commit-Position: refs/heads/main@{#1155133}\n\n(cherry picked from commit 933b9fad3a5396495f52e44259bcbb61e7913311)\n\nChange-Id: I86ee9118a30dea59d837c377a1f751b20a85a3c3\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4602794\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nCommit-Queue: Ken Rockot <rockot@google.com>\nCr-Original-Commit-Position: refs/heads/main@{#1155397}\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4610655\nCommit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nBot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nAuto-Submit: Ken Rockot <rockot@google.com>\nCr-Commit-Position: refs/branch-heads/5735@{#1289}\nCr-Branched-From: 2f562e4ddbaf79a3f3cb338b4d1bd4398d49eb67-refs/heads/main@{#1135570}\n\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/node_link_memory.cc\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/fragment.cc\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/block_allocator_pool.cc\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/ref_counted_fragment_test.cc\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/buffer_pool.cc\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/buffer_pool_test.cc\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/fragment.h\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/fragment_descriptor.h\n[modify] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/BUILD.gn\n[add] https://crrev.com/8e0f94469ed4b145d8a7e79cbfab5cd24ab23217/third_party/ipcz/src/ipcz/fragment_test.cc\n",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-merge-approved-114 merge-merged-5735 merge-merged-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 18,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686698944,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af\n\ncommit c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af\nAuthor: Ken Rockot <rockot@google.com>\nDate: Tue Jun 13 23:28:16 2023\n\n[M115] Reland \"ipcz: Refactor FragmentDescriptor decode\"\n\nThis is a reland of commit 17dd18d1f2194089b8433e0ca334c81343b591e2\n\nOriginal change's description:\n> ipcz: Refactor FragmentDescriptor decode\n>\n> Funnels untrusted FragmentDescriptor mapping through a new\n> Fragment::MappedFromDescriptor helper. See the linked bug\n> for more details.\n>\n> Fixed: 1450899\n> Change-Id: I4c7751b9f4299da4a13c0becc1b889160a0c6e66\n> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4599218\n> Reviewed-by: Daniel Cheng <dcheng@chromium.org>\n> Commit-Queue: Ken Rockot <rockot@google.com>\n> Cr-Commit-Position: refs/heads/main@{#1155133}\n\n(cherry picked from commit 933b9fad3a5396495f52e44259bcbb61e7913311)\n\nChange-Id: I86ee9118a30dea59d837c377a1f751b20a85a3c3\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4602794\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nCommit-Queue: Ken Rockot <rockot@google.com>\nCr-Original-Commit-Position: refs/heads/main@{#1155397}\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4611395\nCommit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nAuto-Submit: Ken Rockot <rockot@google.com>\nBot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nCr-Commit-Position: refs/branch-heads/5790@{#722}\nCr-Branched-From: 1d71a337b1f6e707a13ae074dca1e2c34905eb9f-refs/heads/main@{#1148114}\n\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/node_link_memory.cc\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/fragment.cc\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/block_allocator_pool.cc\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/ref_counted_fragment_test.cc\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/buffer_pool.cc\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/buffer_pool_test.cc\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/fragment.h\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/fragment_descriptor.h\n[modify] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/BUILD.gn\n[add] https://crrev.com/c08a3edb1a4484145c9831d9f06d7d8b3a8cd9af/third_party/ipcz/src/ipcz/fragment_test.cc\n",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-merge-approved-115 merge-merged-5790 merge-merged-115"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 19,
                "commenter": {
                    "userId": "3767437993",
                    "displayName": "amyressler@chromium.org"
                },
                "timestamp": 1689379012,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Release-0-M115"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 20,
                "commenter": {
                    "userId": "400180463",
                    "displayName": "amyressler@google.com"
                },
                "timestamp": 1689642352,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "CVE-2023-3732 CVE_description-missing"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 21,
                "commenter": {
                    "userId": "400180463",
                    "displayName": "amyressler@google.com"
                },
                "timestamp": 1690929567,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-CVE_description-missing CVE_description-submitted"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 22,
                "commenter": {
                    "userId": "3347530518",
                    "displayName": "gmpritchard@google.com"
                },
                "timestamp": 1690998876,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "LTS-Merge-Candidate"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 23,
                "commenter": {
                    "userId": "446778987",
                    "displayName": "rzanoni@google.com"
                },
                "timestamp": 1691137427,
                "amendments": [
                    {
                        "fieldName": "Cc",
                        "newOrDeltaValue": "rzanoni@google.com"
                    },
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "LTS-Evaluating-108"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 24,
                "commenter": {
                    "userId": "446778987",
                    "displayName": "rzanoni@google.com"
                },
                "timestamp": 1691149560,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-LTS-Evaluating-108 LTS-Merge-Request-108"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 25,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1691149916,
                "content": "This issue requires additional review before it can be merged to the LTS channel. Please answer the following questions to help us evaluate this merge:\n\n1. Number of CLs needed for this fix and links to them.\n2. Level of complexity (High, Medium, Low - Explain)\n3. Has this been merged to a stable release? beta release?\n4. Overall Recommendation (Yes, No)\n\n\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-LTS-Merge-Request-108 LTS-Merge-Review-108"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 26,
                "commenter": {
                    "userId": "446778987",
                    "displayName": "rzanoni@google.com"
                },
                "timestamp": 1691149979,
                "content": "1. Just https://crrev.com/c/4751779\n2. Low, no conflicts\n3. 114, 115\n4. Yes"
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 27,
                "commenter": {
                    "userId": "388143997",
                    "displayName": "nallarid@google.com"
                },
                "timestamp": 1691506879,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-LTS-Merge-Candidate -LTS-Merge-Review-108 LTS-Merge-Approved-108"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 28,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1691575090,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/738f44871d309bf1cdd7cf37bbeaf87e4652688c\n\ncommit 738f44871d309bf1cdd7cf37bbeaf87e4652688c\nAuthor: Ken Rockot <rockot@google.com>\nDate: Wed Aug 09 09:57:09 2023\n\n[M108-LTS] Reland \"ipcz: Refactor FragmentDescriptor decode\"\n\nThis is a reland of commit 17dd18d1f2194089b8433e0ca334c81343b591e2\n\nOriginal change's description:\n> ipcz: Refactor FragmentDescriptor decode\n>\n> Funnels untrusted FragmentDescriptor mapping through a new\n> Fragment::MappedFromDescriptor helper. See the linked bug\n> for more details.\n>\n> Fixed: 1450899\n> Change-Id: I4c7751b9f4299da4a13c0becc1b889160a0c6e66\n> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4599218\n> Commit-Queue: Ken Rockot <rockot@google.com>\n> Cr-Commit-Position: refs/heads/main@{#1155133}\n\n(cherry picked from commit 933b9fad3a5396495f52e44259bcbb61e7913311)\n\nChange-Id: I86ee9118a30dea59d837c377a1f751b20a85a3c3\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4602794\nCommit-Queue: Ken Rockot <rockot@google.com>\nCr-Original-Commit-Position: refs/heads/main@{#1155397}\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4751779\nReviewed-by: Achuith Bhandarkar <achuith@chromium.org>\nOwners-Override: Achuith Bhandarkar <achuith@chromium.org>\nCommit-Queue: Roger Felipe Zanoni da Silva <rzanoni@google.com>\nCr-Commit-Position: refs/branch-heads/5359@{#1501}\nCr-Branched-From: 27d3765d341b09369006d030f83f582a29eb57ae-refs/heads/main@{#1058933}\n\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/node_link_memory.cc\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/fragment.cc\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/block_allocator_pool.cc\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/ref_counted_fragment_test.cc\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/buffer_pool.cc\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/buffer_pool_test.cc\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/fragment_descriptor.h\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/fragment.h\n[modify] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/BUILD.gn\n[add] https://crrev.com/738f44871d309bf1cdd7cf37bbeaf87e4652688c/third_party/ipcz/src/ipcz/fragment_test.cc\n",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "merge-merged-5359"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 29,
                "commenter": {
                    "userId": "446778987",
                    "displayName": "rzanoni@google.com"
                },
                "timestamp": 1691580544,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-LTS-Merge-Approved-108 LTS-Merge-Merged-108"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450899,
                "sequenceNum": 30,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1694799600,
                "content": "This bug has been closed for more than 14 weeks. Removing security view restrictions.\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Restrict-View-SecurityNotify allpublic"
                    }
                ]
            }
        ]
    },
    {
        "projectName": "chromium",
        "localId": 1450784,
        "summary": "Security: UAF in extensions::OffscreenCreateDocumentFunction::OnExtensionHostDestroyed (browser process)",
        "statusRef": {
            "status": "Fixed"
        },
        "ownerRef": {
            "userId": "1119303457",
            "displayName": "rdevl...@chromium.org"
        },
        "ccRefs": [
            {
                "userId": "392642265",
                "displayName": "solomonkinard@chromium.org",
                "isDerived": true
            },
            {
                "userId": "1672518139",
                "displayName": "tjudkins@chromium.org",
                "isDerived": true
            }
        ],
        "labelRefs": [
            {
                "label": "Reward-1000"
            },
            {
                "label": "Security_Severity-Medium"
            },
            {
                "label": "AllPublic"
            },
            {
                "label": "reward-inprocess"
            },
            {
                "label": "CVE_description-submitted"
            },
            {
                "label": "external_security_report"
            },
            {
                "label": "Security_Impact-Extended"
            },
            {
                "label": "FoundIn-114"
            },
            {
                "label": "M-114"
            },
            {
                "label": "Target-114"
            },
            {
                "label": "Release-0-M116"
            },
            {
                "label": "CVE-2023-4366"
            }
        ],
        "componentRefs": [
            {
                "path": "Platform>Extensions"
            }
        ],
        "fieldValues": [
            {
                "fieldRef": {
                    "fieldId": "10",
                    "fieldName": "Type",
                    "type": "ENUM_TYPE"
                },
                "value": "Bug-Security"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Linux"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Windows"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Chrome"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Mac"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Fuchsia"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Lacros"
            },
            {
                "fieldRef": {
                    "fieldId": "11",
                    "fieldName": "Pri",
                    "type": "ENUM_TYPE"
                },
                "value": "1"
            }
        ],
        "reporterRef": {
            "userId": "2297871127",
            "displayName": "0xasn...@gmail.com"
        },
        "openedTimestamp": 1685682214,
        "closedTimestamp": 1686088501,
        "modifiedTimestamp": 1694626585,
        "starCount": 2,
        "attachmentCount": 2,
        "componentModifiedTimestamp": 1685745234,
        "statusModifiedTimestamp": 1686088501,
        "ownerModifiedTimestamp": 1685745234,
        "comments": [
            {
                "projectName": "chromium",
                "localId": 1450784,
                "commenter": {
                    "userId": "2297871127",
                    "displayName": "0xasn...@gmail.com"
                },
                "timestamp": 1685682214,
                "content": "<b>VULNERABILITY DETAILS</b>\r\nUAF in extensions::OffscreenCreateDocumentFunction::OnExtensionHostDestroyed in browser process.\r\n\r\n<b>VERSION</b>\r\nChromium\t116.0.5807.0 (Developer Build) (arm64) \r\nRevision\t52bc891f506397897ef06192beda312c480e9937-refs/heads/main@{#1152210}\r\nOS\tmacOS Version 13.3.1 (a) (Build 22E772610a)\r\n\r\n\r\n<b>REPRODUCTION CASE</b>\r\n1. put manifest.json/background.js into the extension_path\r\n2. run the command:\r\n./out/Chromium.app/Contents/MacOS/Chromium --user-data-dir=/tmp --no-first-run --load-extension=\"extension_path\"\r\n\r\n\r\n<b>FOR CRASHES, PLEASE INCLUDE THE FOLLOWING ADDITIONAL INFORMATION</b>\r\nType of crash: [browser]\r\n=================================================================\r\n==81623==ERROR: AddressSanitizer: heap-use-after-free on address 0x6140002d01e0 at pc 0x00011f789e44 bp 0x00016b0bfed0 sp 0x00016b0bfec8\r\nREAD of size 8 at 0x6140002d01e0 thread T0\r\n==81623==WARNING: invalid path to external symbolizer!\r\n==81623==WARNING: Failed to use and restart external symbolizer!\r\n    #0 0x11f789e40 in extensions::OffscreenCreateDocumentFunction::OnExtensionHostDestroyed(extensions::ExtensionHost*)+0x320 (/tmp/libchrome_dll.dylib:arm64+0x18b9e40) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #1 0x11f35555c in extensions::ExtensionHost::~ExtensionHost()+0x800 (/tmp/libchrome_dll.dylib:arm64+0x148555c) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #2 0x11f477b1c in extensions::OffscreenDocumentHost::~OffscreenDocumentHost()+0x8 (/tmp/libchrome_dll.dylib:arm64+0x15a7b1c) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #3 0x11f78c638 in extensions::OffscreenDocumentManager::OffscreenDocumentData::~OffscreenDocumentData()+0x14c (/tmp/libchrome_dll.dylib:arm64+0x18bc638) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #4 0x11f79030c in std::__Cr::__tree<std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>, std::__Cr::__map_value_compare<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>, std::__Cr::less<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>>, true>, std::__Cr::allocator<std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>>>::erase(std::__Cr::__tree_const_iterator<std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>, std::__Cr::__tree_node<std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>, void*>*, long>)+0xf8 (/tmp/libchrome_dll.dylib:arm64+0x18c030c) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #5 0x11f78e470 in extensions::OffscreenDocumentManager::CloseOffscreenDocumentForExtensionId(std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&)+0x1e4 (/tmp/libchrome_dll.dylib:arm64+0x18be470) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #6 0x11f78a9c8 in extensions::OffscreenCloseDocumentFunction::Run()+0x138 (/tmp/libchrome_dll.dylib:arm64+0x18ba9c8) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #7 0x11f33ff8c in ExtensionFunction::RunWithValidation()+0x1ec (/tmp/libchrome_dll.dylib:arm64+0x146ff8c) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #8 0x11f34b550 in extensions::ExtensionFunctionDispatcher::DispatchWithCallbackInternal(extensions::mojom::RequestParams const&, content::RenderFrameHost*, content::RenderProcessHost&, base::OnceCallback<void (ExtensionFunction::ResponseType, base::Value::List, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, mojo::StructPtr<extensions::mojom::ExtraResponseData>)>)+0xc5c (/tmp/libchrome_dll.dylib:arm64+0x147b550) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #9 0x11f34cc14 in extensions::ExtensionFunctionDispatcher::DispatchForServiceWorker(mojo::StructPtr<extensions::mojom::RequestParams>, int)+0x8b8 (/tmp/libchrome_dll.dylib:arm64+0x147cc14) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #10 0x11f4dcab8 in extensions::ServiceWorkerHost::RequestWorker(mojo::StructPtr<extensions::mojom::RequestParams>)+0x1b0 (/tmp/libchrome_dll.dylib:arm64+0x160cab8) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #11 0x11e30de20 in extensions::mojom::ServiceWorkerHostStubDispatch::Accept(extensions::mojom::ServiceWorkerHost*, mojo::Message*)+0x10b0 (/tmp/libchrome_dll.dylib:arm64+0x43de20) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #12 0x107d58254 in mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*)+0xb5c (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x30254) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #13 0x107d704a0 in mojo::MessageDispatcher::Accept(mojo::Message*)+0x2d8 (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x484a0) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #14 0x107d5e354 in mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*)+0x1c4 (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x36354) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #15 0x10a2f398c in IPC::(anonymous namespace)::ChannelAssociatedGroupController::AcceptOnEndpointThread(mojo::Message)+0x538 (/tmp/libipc.dylib:arm64+0x4b98c) (BuildId: 4c4c448255553144a17901ff895510a832000000200000000100000000000b00)\r\n    #16 0x10a2e9bec in base::internal::Invoker<base::internal::BindState<void (IPC::(anonymous namespace)::ChannelAssociatedGroupController::*)(mojo::Message), scoped_refptr<IPC::(anonymous namespace)::ChannelAssociatedGroupController>, mojo::Message>, void ()>::RunOnce(base::internal::BindStateBase*)+0x170 (/tmp/libipc.dylib:arm64+0x41bec) (BuildId: 4c4c448255553144a17901ff895510a832000000200000000100000000000b00)\r\n    #17 0x106d8e340 in base::TaskAnnotator::RunTaskImpl(base::PendingTask&)+0x3c0 (/tmp/libbase.dylib:arm64+0x1fa340) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #18 0x106e1acf0 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::LazyNow*)+0xb20 (/tmp/libbase.dylib:arm64+0x286cf0) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #19 0x106e1969c in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork()+0x1c0 (/tmp/libbase.dylib:arm64+0x28569c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #20 0x10700cb90 in base::MessagePumpCFRunLoopBase::RunWork()+0x16c (/tmp/libbase.dylib:arm64+0x478b90) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #21 0x106ff4d1c in base::mac::CallWithEHFrame(void () block_pointer)+0xc (/tmp/libbase.dylib:arm64+0x460d1c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #22 0x10700a54c in base::MessagePumpCFRunLoopBase::RunWorkSource(void*)+0x13c (/tmp/libbase.dylib:arm64+0x47654c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #23 0x1a497670c in __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__+0x18 (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:arm64+0x7f70c) (BuildId: b4fdaece97273969b01427f7f24c8e0132000000200000000100000000030d00)\r\n    #24 0x687f0001a49766a0  (<unknown module>)\r\n    #25 0x24288001a4976410  (<unknown module>)\r\n    #26 0x64d8001a4975018  (<unknown module>)\r\n    #27 0xdf650001a4974588  (<unknown module>)\r\n    #28 0x2c0c8001ae1a9df0  (<unknown module>)\r\n    #29 0x48380001ae1a9c2c  (<unknown module>)\r\n    #30 0x73578001ae1a9984  (<unknown module>)\r\n    #31 0xa27f8001a7b93f54  (<unknown module>)\r\n    #32 0xe1598001a7b930f0  (<unknown module>)\r\n    #33 0xe3048001212694d0  (<unknown module>)\r\n    #34 0x106ff4d1c in base::mac::CallWithEHFrame(void () block_pointer)+0xc (/tmp/libbase.dylib:arm64+0x460d1c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #35 0x121268fb0 in -[BrowserCrApplication nextEventMatchingMask:untilDate:inMode:dequeue:]+0x2b4 (/tmp/libchrome_dll.dylib:arm64+0x3398fb0) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #36 0x1a7b87554 in -[NSApplication run]+0x1cc (/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit:arm64+0x2c554) (BuildId: cc3e52154cd7364c87506eb7002720ce32000000200000000100000000030d00)\r\n    #37 0x232c00010700f63c  (<unknown module>)\r\n    #38 0x10700925c in base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*)+0x23c (/tmp/libbase.dylib:arm64+0x47525c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #39 0x106e1d500 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta)+0x504 (/tmp/libbase.dylib:arm64+0x289500) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #40 0x106cf05d0 in base::RunLoop::Run(base::Location const&)+0x488 (/tmp/libbase.dylib:arm64+0x15c5d0) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #41 0x11485f6cc in content::BrowserMainLoop::RunMainMessageLoop()+0x1dc (/tmp/libcontent.dylib:arm64+0x13d76cc) (BuildId: 4c4c447e55553144a1c22ccc79ce73ae32000000200000000100000000000b00)\r\n    #42 0x114866340 in content::BrowserMainRunnerImpl::Run()+0x138 (/tmp/libcontent.dylib:arm64+0x13de340) (BuildId: 4c4c447e55553144a1c22ccc79ce73ae32000000200000000100000000000b00)\r\n    #43 0x1148581b4 in content::BrowserMain(content::MainFunctionParams)+0x1c8 (/tmp/libcontent.dylib:arm64+0x13d01b4) (BuildId: 4c4c447e55553144a1c22ccc79ce73ae32000000200000000100000000000b00)\r\n    #44 0x11749eb78 in content::RunBrowserProcessMain(content::MainFunctionParams, content::ContentMainDelegate*)+0x228 (/tmp/libcontent.dylib:arm64+0x4016b78) (BuildId: 4c4c447e55553144a1c22ccc79ce73ae32000000200000000100000000000b00)\r\n    #45 0x1174a1e04 in content::ContentMainRunnerImpl::RunBrowser(content::MainFunctionParams, bool)+0x5bc (/tmp/libcontent.dylib:arm64+0x4019e04) (BuildId: 4c4c447e55553144a1c22ccc79ce73ae32000000200000000100000000000b00)\r\n    #46 0x1174a13b8 in content::ContentMainRunnerImpl::Run()+0x6b0 (/tmp/libcontent.dylib:arm64+0x40193b8) (BuildId: 4c4c447e55553144a1c22ccc79ce73ae32000000200000000100000000000b00)\r\n    #47 0x11749cb70 in content::RunContentProcess(content::ContentMainParams, content::ContentMainRunner*)+0x934 (/tmp/libcontent.dylib:arm64+0x4014b70) (BuildId: 4c4c447e55553144a1c22ccc79ce73ae32000000200000000100000000000b00)\r\n    #48 0x11749d1c4 in content::ContentMain(content::ContentMainParams)+0x144 (/tmp/libcontent.dylib:arm64+0x40151c4) (BuildId: 4c4c447e55553144a1c22ccc79ce73ae32000000200000000100000000000b00)\r\n    #49 0x11deda714 in ChromeMain+0x420 (/tmp/libchrome_dll.dylib:arm64+0xa714) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #50 0x104d3cbb4 in main+0x22c (/tmp/Chromium.app/Contents/MacOS/Chromium:arm64+0x100000bb4) (BuildId: 4c4c44d155553144a12379ba3d682b0832000000200000000100000000000b00)\r\n    #51 0x1a453ff24  (<unknown module>)\r\n    #52 0x274ffffffffffffc  (<unknown module>)\r\n\r\n0x6140002d01e0 is located 416 bytes inside of 424-byte region [0x6140002d0040,0x6140002d01e8)\r\nfreed by thread T0 here:\r\nChromium Helper (Renderer)(81641,0x1ffd05b40) malloc: nano zone abandoned due to inability to reserve vm space.\r\n    #0 0x1054d6a2c in __sanitizer_finish_switch_fiber+0xb68 (/tmp/Chromium.app/Contents/MacOS/libclang_rt.asan_osx_dynamic.dylib:arm64+0x5ea2c) (BuildId: 4c4c443e55553144a1400716444dd55532000000200000000100000000000b00)\r\n    #1 0x11f789ff0 in extensions::OffscreenCreateDocumentFunction::SendResponseToExtension(ExtensionFunction::ResponseValue)+0x19c (/tmp/libchrome_dll.dylib:arm64+0x18b9ff0) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #2 0x11f789ca4 in extensions::OffscreenCreateDocumentFunction::OnExtensionHostDestroyed(extensions::ExtensionHost*)+0x184 (/tmp/libchrome_dll.dylib:arm64+0x18b9ca4) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #3 0x11f35555c in extensions::ExtensionHost::~ExtensionHost()+0x800 (/tmp/libchrome_dll.dylib:arm64+0x148555c) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #4 0x11f477b1c in extensions::OffscreenDocumentHost::~OffscreenDocumentHost()+0x8 (/tmp/libchrome_dll.dylib:arm64+0x15a7b1c) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #5 0x11f78c638 in extensions::OffscreenDocumentManager::OffscreenDocumentData::~OffscreenDocumentData()+0x14c (/tmp/libchrome_dll.dylib:arm64+0x18bc638) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #6 0x11f79030c in std::__Cr::__tree<std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>, std::__Cr::__map_value_compare<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>, std::__Cr::less<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>>, true>, std::__Cr::allocator<std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>>>::erase(std::__Cr::__tree_const_iterator<std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>, std::__Cr::__tree_node<std::__Cr::__value_type<std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, extensions::OffscreenDocumentManager::OffscreenDocumentData>, void*>*, long>)+0xf8 (/tmp/libchrome_dll.dylib:arm64+0x18c030c) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #7 0x11f78e470 in extensions::OffscreenDocumentManager::CloseOffscreenDocumentForExtensionId(std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&)+0x1e4 (/tmp/libchrome_dll.dylib:arm64+0x18be470) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #8 0x11f78a9c8 in extensions::OffscreenCloseDocumentFunction::Run()+0x138 (/tmp/libchrome_dll.dylib:arm64+0x18ba9c8) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #9 0x11f33ff8c in ExtensionFunction::RunWithValidation()+0x1ec (/tmp/libchrome_dll.dylib:arm64+0x146ff8c) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #10 0x11f34b550 in extensions::ExtensionFunctionDispatcher::DispatchWithCallbackInternal(extensions::mojom::RequestParams const&, content::RenderFrameHost*, content::RenderProcessHost&, base::OnceCallback<void (ExtensionFunction::ResponseType, base::Value::List, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, mojo::StructPtr<extensions::mojom::ExtraResponseData>)>)+0xc5c (/tmp/libchrome_dll.dylib:arm64+0x147b550) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #11 0x11f34cc14 in extensions::ExtensionFunctionDispatcher::DispatchForServiceWorker(mojo::StructPtr<extensions::mojom::RequestParams>, int)+0x8b8 (/tmp/libchrome_dll.dylib:arm64+0x147cc14) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #12 0x11f4dcab8 in extensions::ServiceWorkerHost::RequestWorker(mojo::StructPtr<extensions::mojom::RequestParams>)+0x1b0 (/tmp/libchrome_dll.dylib:arm64+0x160cab8) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #13 0x11e30de20 in extensions::mojom::ServiceWorkerHostStubDispatch::Accept(extensions::mojom::ServiceWorkerHost*, mojo::Message*)+0x10b0 (/tmp/libchrome_dll.dylib:arm64+0x43de20) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #14 0x107d58254 in mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*)+0xb5c (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x30254) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #15 0x107d704a0 in mojo::MessageDispatcher::Accept(mojo::Message*)+0x2d8 (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x484a0) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #16 0x107d5e354 in mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*)+0x1c4 (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x36354) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #17 0x10a2f398c in IPC::(anonymous namespace)::ChannelAssociatedGroupController::AcceptOnEndpointThread(mojo::Message)+0x538 (/tmp/libipc.dylib:arm64+0x4b98c) (BuildId: 4c4c448255553144a17901ff895510a832000000200000000100000000000b00)\r\n    #18 0x10a2e9bec in base::internal::Invoker<base::internal::BindState<void (IPC::(anonymous namespace)::ChannelAssociatedGroupController::*)(mojo::Message), scoped_refptr<IPC::(anonymous namespace)::ChannelAssociatedGroupController>, mojo::Message>, void ()>::RunOnce(base::internal::BindStateBase*)+0x170 (/tmp/libipc.dylib:arm64+0x41bec) (BuildId: 4c4c448255553144a17901ff895510a832000000200000000100000000000b00)\r\n    #19 0x106d8e340 in base::TaskAnnotator::RunTaskImpl(base::PendingTask&)+0x3c0 (/tmp/libbase.dylib:arm64+0x1fa340) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #20 0x106e1acf0 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::LazyNow*)+0xb20 (/tmp/libbase.dylib:arm64+0x286cf0) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #21 0x106e1969c in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork()+0x1c0 (/tmp/libbase.dylib:arm64+0x28569c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #22 0x10700cb90 in base::MessagePumpCFRunLoopBase::RunWork()+0x16c (/tmp/libbase.dylib:arm64+0x478b90) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #23 0x106ff4d1c in base::mac::CallWithEHFrame(void () block_pointer)+0xc (/tmp/libbase.dylib:arm64+0x460d1c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #24 0x10700a54c in base::MessagePumpCFRunLoopBase::RunWorkSource(void*)+0x13c (/tmp/libbase.dylib:arm64+0x47654c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #25 0x1a497670c in __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__+0x18 (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:arm64+0x7f70c) (BuildId: b4fdaece97273969b01427f7f24c8e0132000000200000000100000000030d00)\r\n    #26 0x687f0001a49766a0  (<unknown module>)\r\n    #27 0x24288001a4976410  (<unknown module>)\r\n    #28 0x64d8001a4975018  (<unknown module>)\r\n    #29 0xdf650001a4974588  (<unknown module>)\r\n\r\npreviously allocated by thread T0 here:\r\n    #0 0x1054d660c in __sanitizer_finish_switch_fiber+0x748 (/tmp/Chromium.app/Contents/MacOS/libclang_rt.asan_osx_dynamic.dylib:arm64+0x5e60c) (BuildId: 4c4c443e55553144a1400716444dd55532000000200000000100000000000b00)\r\n    #1 0x12484c8d4 in scoped_refptr<ExtensionFunction> NewExtensionFunction<extensions::OffscreenCreateDocumentFunction>()+0xe4 (/tmp/libchrome_dll.dylib:arm64+0x697c8d4) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #2 0x11f353a54 in ExtensionFunctionRegistry::NewFunction(std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&)+0x178 (/tmp/libchrome_dll.dylib:arm64+0x1483a54) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #3 0x11f34df58 in extensions::ExtensionFunctionDispatcher::CreateExtensionFunction(extensions::mojom::RequestParams const&, extensions::Extension const*, int, bool, GURL const*, extensions::Feature::Context, extensions::ExtensionAPI*, base::OnceCallback<void (ExtensionFunction::ResponseType, base::Value::List, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, mojo::StructPtr<extensions::mojom::ExtraResponseData>)>, content::RenderFrameHost*)+0x264 (/tmp/libchrome_dll.dylib:arm64+0x147df58) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #4 0x11f34aea0 in extensions::ExtensionFunctionDispatcher::DispatchWithCallbackInternal(extensions::mojom::RequestParams const&, content::RenderFrameHost*, content::RenderProcessHost&, base::OnceCallback<void (ExtensionFunction::ResponseType, base::Value::List, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, mojo::StructPtr<extensions::mojom::ExtraResponseData>)>)+0x5ac (/tmp/libchrome_dll.dylib:arm64+0x147aea0) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #5 0x11f34cc14 in extensions::ExtensionFunctionDispatcher::DispatchForServiceWorker(mojo::StructPtr<extensions::mojom::RequestParams>, int)+0x8b8 (/tmp/libchrome_dll.dylib:arm64+0x147cc14) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #6 0x11f4dcab8 in extensions::ServiceWorkerHost::RequestWorker(mojo::StructPtr<extensions::mojom::RequestParams>)+0x1b0 (/tmp/libchrome_dll.dylib:arm64+0x160cab8) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #7 0x11e30de20 in extensions::mojom::ServiceWorkerHostStubDispatch::Accept(extensions::mojom::ServiceWorkerHost*, mojo::Message*)+0x10b0 (/tmp/libchrome_dll.dylib:arm64+0x43de20) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00)\r\n    #8 0x107d58254 in mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*)+0xb5c (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x30254) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #9 0x107d704a0 in mojo::MessageDispatcher::Accept(mojo::Message*)+0x2d8 (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x484a0) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #10 0x107d5e354 in mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*)+0x1c4 (/tmp/libmojo_public_cpp_bindings.dylib:arm64+0x36354) (BuildId: 4c4c44c055553144a1199b67a8a68e3432000000200000000100000000000b00)\r\n    #11 0x10a2f398c in IPC::(anonymous namespace)::ChannelAssociatedGroupController::AcceptOnEndpointThread(mojo::Message)+0x538 (/tmp/libipc.dylib:arm64+0x4b98c) (BuildId: 4c4c448255553144a17901ff895510a832000000200000000100000000000b00)\r\n    #12 0x10a2e9bec in base::internal::Invoker<base::internal::BindState<void (IPC::(anonymous namespace)::ChannelAssociatedGroupController::*)(mojo::Message), scoped_refptr<IPC::(anonymous namespace)::ChannelAssociatedGroupController>, mojo::Message>, void ()>::RunOnce(base::internal::BindStateBase*)+0x170 (/tmp/libipc.dylib:arm64+0x41bec) (BuildId: 4c4c448255553144a17901ff895510a832000000200000000100000000000b00)\r\n    #13 0x106d8e340 in base::TaskAnnotator::RunTaskImpl(base::PendingTask&)+0x3c0 (/tmp/libbase.dylib:arm64+0x1fa340) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #14 0x106e1acf0 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::LazyNow*)+0xb20 (/tmp/libbase.dylib:arm64+0x286cf0) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #15 0x106e1969c in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork()+0x1c0 (/tmp/libbase.dylib:arm64+0x28569c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #16 0x10700cb90 in base::MessagePumpCFRunLoopBase::RunWork()+0x16c (/tmp/libbase.dylib:arm64+0x478b90) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #17 0x106ff4d1c in base::mac::CallWithEHFrame(void () block_pointer)+0xc (/tmp/libbase.dylib:arm64+0x460d1c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #18 0x10700a54c in base::MessagePumpCFRunLoopBase::RunWorkSource(void*)+0x13c (/tmp/libbase.dylib:arm64+0x47654c) (BuildId: 4c4c44df55553144a182eaadbe21d29b32000000200000000100000000000b00)\r\n    #19 0x1a497670c in __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__+0x18 (/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation:arm64+0x7f70c) (BuildId: b4fdaece97273969b01427f7f24c8e0132000000200000000100000000030d00)\r\n    #20 0x687f0001a49766a0  (<unknown module>)\r\n    #21 0x24288001a4976410  (<unknown module>)\r\n    #22 0x64d8001a4975018  (<unknown module>)\r\n    #23 0xdf650001a4974588  (<unknown module>)\r\n    #24 0x2c0c8001ae1a9df0  (<unknown module>)\r\n    #25 0x48380001ae1a9c2c  (<unknown module>)\r\n    #26 0x73578001ae1a9984  (<unknown module>)\r\n    #27 0xa27f8001a7b93f54  (<unknown module>)\r\n    #28 0xe1598001a7b930f0  (<unknown module>)\r\n    #29 0xe3048001212694d0  (<unknown module>)\r\n\r\nSUMMARY: AddressSanitizer: heap-use-after-free (/tmp/libchrome_dll.dylib:arm64+0x18b9e40) (BuildId: 4c4c449c55553144a17822fc39cc2ae332000000200000000100000000000b00) in extensions::OffscreenCreateDocumentFunction::OnExtensionHostDestroyed(extensions::ExtensionHost*)+0x320\r\nShadow bytes around the buggy address:\r\n  0x6140002cff00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x6140002cff80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x6140002d0000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd\r\n  0x6140002d0080: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x6140002d0100: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n=>0x6140002d0180: fd fd fd fd fd fd fd fd fd fd fd fd[fd]fa fa fa\r\n  0x6140002d0200: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00\r\n  0x6140002d0280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x6140002d0300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x6140002d0380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x6140002d0400: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07\r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n\r\n==81623==ADDITIONAL INFO\r\n\r\n==81623==Note: Please include this section with the ASan report.\r\nTask trace:\r\n    #0 0x10a2e7760 in IPC::(anonymous namespace)::ChannelAssociatedGroupController::Accept(mojo::Message*)+0xcd4 (/tmp/libipc.dylib:arm64+0x3f760) (BuildId: 4c4c448255553144a17901ff895510a832000000200000000100000000000b00)\r\n    #1 0x1065cb190 in mojo::SimpleWatcher::Context::Notify(unsigned int, MojoHandleSignalsState, unsigned int)+0x320 (/tmp/libmojo_public_system_cpp.dylib:arm64+0x1f190) (BuildId: 4c4c442955553144a108fbe29d1b073d32000000200000000100000000000b00)\r\n\r\n",
                "attachments": [
                    {
                        "attachmentId": "599959",
                        "filename": "manifest.json",
                        "size": "232",
                        "contentType": "text/plain",
                        "viewUrl": "/p/chromium/issues/attachmentText?aid=599959",
                        "downloadUrl": "attachment?aid=599959&signed_aid=ANjLMdG4aWdTbBlP-Gw-zQ==",
                        "data": "ewogICJuYW1lIjogIlVBRiBpbiBjaHJvbWUub2Zmc2NyZWVuIGFwaSIsCiAgImRlc2NyaXB0aW9uIjogIlVBRiBpbiBvZmZzY3JlZW4gYXBpIiwKICAidmVyc2lvbiI6ICIyLjAiLAogICJiYWNrZ3JvdW5kIjogewogICAgInNlcnZpY2Vfd29ya2VyIjogImJhY2tncm91bmQuanMiCiAgfSwKCiAgIm1hbmlmZXN0X3ZlcnNpb24iOiAzLAoKICAicGVybWlzc2lvbnMiOiBbCiAgICAib2Zmc2NyZWVuIgogIF0KfQ=="
                    },
                    {
                        "attachmentId": "599960",
                        "filename": "background.js",
                        "size": "146",
                        "contentType": "text/plain",
                        "viewUrl": "/p/chromium/issues/attachmentText?aid=599960",
                        "downloadUrl": "attachment?aid=599960&signed_aid=uXsaYI4vN4JzSXbrzMlPPg==",
                        "data": "CgpjaHJvbWUub2Zmc2NyZWVuLmNyZWF0ZURvY3VtZW50KHsncmVhc29ucyc6IFsnRE9NX1NDUkFQSU5HJ10sICd1cmwnOiBsb2NhdGlvbi5ocmVmLCAnanVzdGlmaWNhdGlvbic6ICJBIn0pOwpjaHJvbWUub2Zmc2NyZWVuLmNsb3NlRG9jdW1lbnQoKTsKCgo="
                    }
                ],
                "descriptionNum": 1
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 1,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685682331,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "external_security_report"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 2,
                "commenter": {
                    "userId": "939468363",
                    "displayName": "carlosil@chromium.org"
                },
                "timestamp": 1685745234,
                "content": "Im able to reproduce this in current stable on Linux.\n\nDevlin: Passing this to you since I see you in the git history for the relevant file, but feel free to reassign as appropriate. Thanks",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Assigned",
                        "oldValue": "Unconfirmed"
                    },
                    {
                        "fieldName": "Owner",
                        "newOrDeltaValue": "rdevl...@chromium.org"
                    },
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "FoundIn-114 Security_Severity-High OS-Chrome OS-Fuchsia OS-Linux OS-Mac OS-Windows OS-Lacros"
                    },
                    {
                        "fieldName": "Components",
                        "newOrDeltaValue": "Platform>Extensions"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 3,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685745643,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Security_Impact-Extended"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 4,
                "commenter": {
                    "userId": "1119303457",
                    "displayName": "rdevl...@chromium.org"
                },
                "timestamp": 1685750313,
                "content": "Thanks for the report!  This definitely is a bug (silly mistake on my part).  I'll have a CL up to fix it on Monday.\n\nOne thing worth noting: the UAF occurs in a DCHECK, so this shouldn't affect large populations of stable users.  (But very obviously, still something we have to fix!)"
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 5,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685811022,
                "content": "Setting milestone and target because of high severity.\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "M-114 Target-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 6,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685812553,
                "content": "Setting Pri-1 to match security severity High. If this is incorrect, please reset the priority. Sheriffbot won't make this change again.\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Pri-3 Pri-1"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 7,
                "commenter": {
                    "userId": "1119303457",
                    "displayName": "rdevl...@chromium.org"
                },
                "timestamp": 1686005752,
                "content": "WIP CL: https://chromium-review.googlesource.com/c/chromium/src/+/4590681\n\nI'm also lowering this to medium because:\n1) It requires the user to install an extension to exploit it, and\n2) It only affects users with DCHECK enabled\n\nSecurity team, feel free to increase if you think it's appropriate.",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Security_Severity-High Security_Severity-Medium"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 8,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686083106,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/bb04074866a59716ce7e78ec045f5a11eeab08df\n\ncommit bb04074866a59716ce7e78ec045f5a11eeab08df\nAuthor: Devlin Cronin <rdevlin.cronin@chromium.org>\nDate: Tue Jun 06 20:24:19 2023\n\n[Extensions] Remove bad DCHECK in offscreen API\n\nBug: 1450784\nChange-Id: I84f280200b31cb95a13fe3e14838707decb344a4\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4590681\nReviewed-by: Tim <tjudkins@chromium.org>\nCommit-Queue: Devlin Cronin <rdevlin.cronin@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1154035}\n\n[modify] https://crrev.com/bb04074866a59716ce7e78ec045f5a11eeab08df/chrome/browser/extensions/api/offscreen/offscreen_apitest.cc\n[modify] https://crrev.com/bb04074866a59716ce7e78ec045f5a11eeab08df/extensions/browser/api/offscreen/offscreen_api.cc\n"
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 9,
                "commenter": {
                    "userId": "1119303457",
                    "displayName": "rdevl...@chromium.org"
                },
                "timestamp": 1686088501,
                "content": "This should be fixed with c#8.",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Fixed",
                        "oldValue": "Assigned"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 10,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1686156287,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "reward-topanel"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 11,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1686160077,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Restrict-View-SecurityTeam Restrict-View-SecurityNotify"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 12,
                "commenter": {
                    "userId": "400180463",
                    "displayName": "amyressler@google.com"
                },
                "timestamp": 1686887339,
                "content": "*** Boilerplate reminders! ***\nPlease do NOT publicly disclose details until a fix has been released to all our users. Early public disclosure may cancel the provisional reward. Also, please be considerate about disclosure when the bug affects a core library that may be used by other products. Please do NOT share this information with third parties who are not directly involved in fixing the bug. Doing so may cancel the provisional reward. Please be honest if you have already disclosed anything publicly or to third parties. Lastly, we understand that some of you are not interested in money. We offer the option to donate your reward to an eligible charity. If you prefer this option, let us know and we will also match your donation - subject to our discretion. Any rewards that are unclaimed after 12 months will be donated to a charity of our choosing.\n\nPlease contact security-vrp@chromium.org with any questions.\n******************************",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-reward-topanel reward-unpaid reward-1000"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 13,
                "commenter": {
                    "userId": "3767437993",
                    "displayName": "amyressler@chromium.org"
                },
                "timestamp": 1686890673,
                "content": "Congratulations, asnine! The VRP Panel has decided to award you $1,000 for this report of a highly mitigated security bug as this issue requires the installation of an extension and only impacts builds with DCHECK enabled, which is relegated to Canary users. Thank you for your efforts and reporting this issue to us! "
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 14,
                "commenter": {
                    "userId": "400180463",
                    "displayName": "amyressler@google.com"
                },
                "timestamp": 1687027787,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-reward-unpaid reward-inprocess"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 15,
                "commenter": {
                    "userId": "3767437993",
                    "displayName": "amyressler@chromium.org"
                },
                "timestamp": 1691792943,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Release-0-M116"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 16,
                "commenter": {
                    "userId": "400180463",
                    "displayName": "amyressler@google.com"
                },
                "timestamp": 1692058172,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "CVE-2023-4366 CVE_description-missing"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 17,
                "commenter": {
                    "userId": "4232789365",
                    "displayName": "pgrace@google.com"
                },
                "timestamp": 1692119298,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-CVE_description-missing CVE_description-submitted"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450784,
                "sequenceNum": 18,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1694626585,
                "content": "This bug has been closed for more than 14 weeks. Removing security view restrictions.\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Restrict-View-SecurityNotify allpublic"
                    }
                ]
            }
        ]
    },
    {
        "projectName": "chromium",
        "localId": 1450601,
        "summary": "Security: heap-use-after-free in device::OpenXrApiWrapper::InitSession",
        "statusRef": {
            "status": "Fixed"
        },
        "ownerRef": {
            "userId": "3521107390",
            "displayName": "alcooper@chromium.org"
        },
        "ccRefs": [
            {
                "userId": "1572007341",
                "displayName": "bajones@chromium.org"
            },
            {
                "userId": "2235243820",
                "displayName": "bialpio@chromium.org"
            },
            {
                "userId": "3767437993",
                "displayName": "amyressler@chromium.org"
            }
        ],
        "labelRefs": [
            {
                "label": "Hotlist-Merge-Review"
            },
            {
                "label": "Security_Severity-High"
            },
            {
                "label": "AllPublic"
            },
            {
                "label": "CVE_description-submitted"
            },
            {
                "label": "Security_Impact-Extended"
            },
            {
                "label": "FoundIn-114"
            },
            {
                "label": "M-114"
            },
            {
                "label": "Target-114"
            },
            {
                "label": "merge-merged-115"
            },
            {
                "label": "merge-merged-5735"
            },
            {
                "label": "merge-merged-114"
            },
            {
                "label": "merge-merged-5790"
            },
            {
                "label": "Release-2-M114"
            },
            {
                "label": "CVE-2023-3217"
            },
            {
                "label": "Proj-VR",
                "isDerived": true
            },
            {
                "label": "Proj-XR",
                "isDerived": true
            }
        ],
        "componentRefs": [
            {
                "path": "Blink>WebXR"
            }
        ],
        "fieldValues": [
            {
                "fieldRef": {
                    "fieldId": "10",
                    "fieldName": "Type",
                    "type": "ENUM_TYPE"
                },
                "value": "Bug-Security"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Android"
            },
            {
                "fieldRef": {
                    "fieldId": "12",
                    "fieldName": "OS",
                    "type": "ENUM_TYPE"
                },
                "value": "Windows"
            },
            {
                "fieldRef": {
                    "fieldId": "11",
                    "fieldName": "Pri",
                    "type": "ENUM_TYPE"
                },
                "value": "1"
            }
        ],
        "reporterRef": {
            "userId": "319881749",
            "displayName": "glazunov@google.com"
        },
        "openedTimestamp": 1685632145,
        "closedTimestamp": 1685662865,
        "modifiedTimestamp": 1694194553,
        "starCount": 4,
        "attachmentCount": 1,
        "componentModifiedTimestamp": 1685645909,
        "statusModifiedTimestamp": 1685662865,
        "ownerModifiedTimestamp": 1685645909,
        "comments": [
            {
                "projectName": "chromium",
                "localId": 1450601,
                "commenter": {
                    "userId": "319881749",
                    "displayName": "glazunov@google.com"
                },
                "timestamp": 1685632145,
                "content": "<b>VULNERABILITY DETAILS</b>\r\n```\r\nXrResult OpenXrApiWrapper::InitSession(\r\n    const std::unordered_set<mojom::XRSessionFeature>& enabled_features,\r\n    OpenXrGraphicsBinding* graphics_binding,\r\n    const OpenXrExtensionHelper& extension_helper,\r\n    SessionStartedCallback on_session_started_callback,\r\n    SessionEndedCallback on_session_ended_callback,\r\n    VisibilityChangedCallback visibility_changed_callback) {\r\n[...]\r\n  if (extension_helper.ExtensionEnumeration()->ExtensionSupported(\r\n          XR_MSFT_UNBOUNDED_REFERENCE_SPACE_EXTENSION_NAME)) {\r\n    RETURN_IF_XR_FAILED(\r\n        CreateSpace(XR_REFERENCE_SPACE_TYPE_UNBOUNDED_MSFT, &unbounded_space_));\r\n  }\r\n[...]\r\n}\r\n```\r\n\r\nBy the time `ExtensionEnumeration` is called, the `extension_helper` reference parameter might be dangling. The reference is extracted from the raw_ref member `OpenXrRenderLoop::extension_helper_`. The extension helper object is owned by the `OpenXrDevice` object, which should keep the helper alive for the entire lifetime of the render loop. However, if `OpenXrDevice::RequestSession` is called twice, the following line will cause the original helper to be destroyed.\r\n\r\n```\r\nvoid OpenXrDevice::RequestSession(\r\n    mojom::XRRuntimeSessionOptionsPtr options,\r\n    mojom::XRRuntime::RequestSessionCallback callback) {\r\n[...]\r\n  extension_helper_ = std::make_unique<OpenXrExtensionHelper>(instance_, platform_helper_->GetExtensionEnumeration());\r\n[...]\r\n}\r\n```\r\n\r\nThere are renderer- and browser-side checks to ensure there's only one immersive XR session at any given time. Unfortunately, the checks are racy, and simply requesting two immersive VR sessions for different frames one right after the other will reliably trigger the issue.\r\n\r\n\r\n<b>VERSION</b>\r\nGoogle Chrome 114.0.5735.45 (Official Build)\r\nChromium 116.0.5806.0 (Developer Build)\r\n\r\n\r\n<b>REPRODUCTION CASE</b>\r\nThe bug requires an attached VR headset. I used the Windows Mixed Reality Simulator to reproduce it.\r\n\r\n```\r\n<body>\r\n<script>\r\nh1 = document.body.appendChild(document.createElement(\"h1\"));\r\nh1.textContent = \"Click me\";\r\n\r\nframe = document.body.appendChild(document.createElement(\"iframe\"));\r\nframe.style.opacity = 0;\r\n  \r\nonclick = _ => {\r\n  h1.textContent = \"Allow VR\";\r\n  navigator.xr.requestSession(\"immersive-vr\").then(session => session.end()).then(_ => {\r\n    frame.contentWindow.navigator.xr.requestSession(\"immersive-vr\");\r\n    navigator.xr.requestSession(\"immersive-vr\");\r\n  });\r\n}\r\n</script>\r\n</body>\r\n```\r\n\r\n\r\n<b>CREDIT INFORMATION</b>\r\nSergei Glazunov of Google Project Zero\r\n\r\n\r\nThis bug is subject to a 90-day disclosure deadline. If a fix for this issue is made available to users before the end of the 90-day deadline, this bug report will become public 30 days after the fix was made available. Otherwise, this bug report will become public at the deadline. The scheduled deadline is 2023-08-30.\r\n",
                "attachments": [
                    {
                        "attachmentId": "599887",
                        "filename": "asan.log",
                        "size": "31818",
                        "contentType": "text/plain",
                        "viewUrl": "/p/chromium/issues/attachmentText?aid=599887",
                        "downloadUrl": "attachment?aid=599887&signed_aid=GoChu0T50RQiDNgm-jx1Bg==",
                        "data": ""
                    }
                ],
                "descriptionNum": 1
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 1,
                "commenter": {
                    "userId": "1324661417",
                    "displayName": "cthomp@chromium.org"
                },
                "timestamp": 1685645909,
                "content": "Assigning and CC'ing WebXR owners. I believe this is a code execution vulnerability in an unsandboxed process, so setting initial security labels to Security_Severity-Critical and FoundIn-114 (Stable).\n\nThis seems likely to affect all Blink platforms, but feel free to remove any platform labels where this is not reachable.",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Assigned",
                        "oldValue": "Unconfirmed"
                    },
                    {
                        "fieldName": "Owner",
                        "newOrDeltaValue": "alcooper@chromium.org"
                    },
                    {
                        "fieldName": "Cc",
                        "newOrDeltaValue": "bajones@chromium.org bialpio@chromium.org"
                    },
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Security_Severity-Critical FoundIn-114 OS-Android OS-Chrome OS-Fuchsia OS-Linux OS-Mac OS-Windows OS-Lacros Pri-0"
                    },
                    {
                        "fieldName": "Components",
                        "newOrDeltaValue": "Blink>WebXR"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 2,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685646214,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Security_Impact-Extended"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 3,
                "commenter": {
                    "userId": "3521107390",
                    "displayName": "alcooper@chromium.org"
                },
                "timestamp": 1685647340,
                "content": "The buildflag required to enable this (enable_openxr) is only set true for Windows and Android. On Windows, the code runs inside of a sandboxed utility process and on Android the code is currently behind a flag which is disabled-by-default"
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 4,
                "commenter": {
                    "userId": "3521107390",
                    "displayName": "alcooper@chromium.org"
                },
                "timestamp": 1685647355,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-OS-Linux -OS-Chrome -OS-Mac -OS-Fuchsia -OS-Lacros"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 5,
                "commenter": {
                    "userId": "3521107390",
                    "displayName": "alcooper@chromium.org"
                },
                "timestamp": 1685647551,
                "content": "There should still only be one OpenXr Device object, and so I think strengthening the check here may be acceptable to mitigate this bug, https://source.chromium.org/chromium/chromium/src/+/main:device/vr/openxr/openxr_device.cc;drc=b26172725923fdc7541b016f450326e20f0a4869;l=140\n\nThough we could also just turn it into an immediate reject of the new session."
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 6,
                "commenter": {
                    "userId": "1324661417",
                    "displayName": "cthomp@chromium.org"
                },
                "timestamp": 1685647791,
                "content": "Thanks for the details in Comment #3 -- downgrading this to Severity-High then.",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Security_Severity-Critical Security_Severity-High"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 7,
                "commenter": {
                    "userId": "1324661417",
                    "displayName": "cthomp@chromium.org"
                },
                "timestamp": 1685648112,
                "content": "Sev-High -> Pri-1",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Pri-1"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 8,
                "commenter": {
                    "userId": "3521107390",
                    "displayName": "alcooper@chromium.org"
                },
                "timestamp": 1685656973,
                "content": "I cannot repro with ToT; though looking through the browser code I certainly can see that this is a plausible risk here. I've got a patch that I'm landing which *should* mitigate the issue; but I could use some help to validate that it actually does."
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 9,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1685662866,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/d51e08f0dbca5b99e3e70596e0306c8db2dc2bd6\n\ncommit d51e08f0dbca5b99e3e70596e0306c8db2dc2bd6\nAuthor: Alexander Cooper <alcooper@chromium.org>\nDate: Thu Jun 01 23:40:25 2023\n\nFix DCHECK when there is already a pending xr session request\n\nIt is possible to racily force two session requests to get served to the\nsame runtime. This results in a DCHECK because we expect to only have\none outstanding request at a time. For now, this softens the DCHECK into\nsimply an immediate reject, but future work will investigate\nstrengthening the guarantees from the Browser process that we cannot\nget multiple session requests.\n\nFixed: 1450601\nChange-Id: Ic2b372a26156229092053d1734de9e62487b53ee\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4582708\nReviewed-by: Brandon Jones <bajones@chromium.org>\nCommit-Queue: Alexander Cooper <alcooper@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1152234}\n\n[modify] https://crrev.com/d51e08f0dbca5b99e3e70596e0306c8db2dc2bd6/device/vr/openxr/openxr_device.cc\n",
                "amendments": [
                    {
                        "fieldName": "Status",
                        "newOrDeltaValue": "Fixed",
                        "oldValue": "Assigned"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 10,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685724573,
                "content": "Setting milestone and target because of high severity.\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "M-114 Target-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 11,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685728101,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Restrict-View-SecurityTeam Restrict-View-SecurityNotify"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 12,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685729342,
                "content": "Requesting merge to stable M114 because latest trunk commit (1152234) appears to be after stable branch point (1135570).\n\nRequesting merge to beta M115 because latest trunk commit (1152234) appears to be after beta branch point (1148114).\n\nThank you for fixing this security bug! We aim to ship security fixes as quickly as possible, to limit their opportunity for exploitation as an \"n-day\" (that is, a bug where git fixes are developed into attacks before those fixes reach users).\n\nSheriffbot has determined this fix is necessary on milestone(s): [].\n\nPlease answer the following questions so that we can safely process this merge request:\n1. Which CLs should be backmerged? (Please include Gerrit links.)\n2. Has this fix been tested on Canary?\n3. Has this fix been verified to not pose any stability regressions and does it pose potential stability risks?\n4. Does this fix pose any known compatibility risks?\n5. Does it require manual verification by the test team? If so, please describe required testing.\n\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Merge-Request-114 Merge-Request-115"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 13,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685749626,
                "content": "Merge review required: M115 is already shipping to beta.\n\nPlease answer the following questions so that we can safely process your merge request:\n1. Why does your merge fit within the merge criteria for these milestones?\n- Chrome Browser: https://chromiumdash.appspot.com/branches\n- Chrome OS: https://goto.google.com/cros-release-branch-merge-guidelines\n2. What changes specifically would you like to merge? Please link to Gerrit.\n3. Have the changes been released and tested on canary?\n4. Is this a new feature? If yes, is it behind a Finch flag and are experiments active in any release channels?\n5. [Chrome OS only]: Was the change reviewed and approved by the Eng Prod Representative? https://goto.google.com/cros-engprodcomponents\n6. If this merge addresses a major issue in the stable channel, does it require manual verification by the test team? If so, please describe required testing.\n\nPlease contact the milestone owner if you have questions.\nOwners: govind (Android), govind (iOS), dgagnon (ChromeOS), pbommana (Desktop)\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Merge-Request-115 Hotlist-Merge-Review Merge-Review-115"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 14,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1685749632,
                "content": "Merge review required: M114 is already shipping to stable.\n\nPlease answer the following questions so that we can safely process your merge request:\n1. Why does your merge fit within the merge criteria for these milestones?\n- Chrome Browser: https://chromiumdash.appspot.com/branches\n- Chrome OS: https://goto.google.com/cros-release-branch-merge-guidelines\n2. What changes specifically would you like to merge? Please link to Gerrit.\n3. Have the changes been released and tested on canary?\n4. Is this a new feature? If yes, is it behind a Finch flag and are experiments active in any release channels?\n5. [Chrome OS only]: Was the change reviewed and approved by the Eng Prod Representative? https://goto.google.com/cros-engprodcomponents\n6. If this merge addresses a major issue in the stable channel, does it require manual verification by the test team? If so, please describe required testing.\n\nPlease contact the milestone owner if you have questions.\nOwners: govind (Android), govind (iOS), ceb (ChromeOS), srinivassista (Desktop)\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Merge-Request-114 Merge-Review-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 15,
                "commenter": {
                    "userId": "3521107390",
                    "displayName": "alcooper@chromium.org"
                },
                "timestamp": 1685983980,
                "content": "@glazunov can you help confirm that latest ToT fixes the PoC.\n\nRegardless, answering the merge review questions, as even if it doesn't, this should be trivially safe to merge:\n\nWorth noting, that while the code does build for Android, it is currently only accessible behind a flag, and so really this is only a concern on Windows.\n\nSecurity Merge questions:\nPlease answer the following questions so that we can safely process this merge request:\n1. Which CLs should be backmerged? (Please include Gerrit links.)\nhttps://chromium-review.googlesource.com/c/chromium/src/+/4582708\n\n2. Has this fix been tested on Canary?\nI have been unable to repro the initial issue with or without the patch; but the patch is trivially safe and has been confirmed to not regress behavior.\n\n3. Has this fix been verified to not pose any stability regressions and does it pose potential stability risks?\nIt should not. A DCHECK is replaced by calling a passed in mojo callback with a \"failed\" result early instead; which is something that can also happen later on in the same modified function, and os is a case that callers already had to expect/handle.\n\n4. Does this fix pose any known compatibility risks?\nNo\n\n5. Does it require manual verification by the test team? If so, please describe required testing.\nUnsure.\n\n\n1. Why does your merge fit within the merge criteria for these milestones?\n- Chrome Browser: https://chromiumdash.appspot.com/branches\nHigh Severity Security bug as triaged by Security team\n\n- Chrome OS: https://goto.google.com/cros-release-branch-merge-guidelines\nN/a\n2. What changes specifically would you like to merge? Please link to Gerrit.\nhttps://chromium-review.googlesource.com/c/chromium/src/+/4582708\n\n3. Have the changes been released and tested on canary?\nYes\n\n4. Is this a new feature? If yes, is it behind a Finch flag and are experiments active in any release channels?\nIt is existing and enabled by default on Windows and in development on Android where it is behind a flag that is disabled by default.\n\n5. [Chrome OS only]: Was the change reviewed and approved by the Eng Prod Representative? https://goto.google.com/cros-engprodcomponents\nN/a\n\n6. If this merge addresses a major issue in the stable channel, does it require manual verification by the test team? If so, please describe required testing.\nUnsure\n"
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 16,
                "commenter": {
                    "userId": "3767437993",
                    "displayName": "amyressler@chromium.org"
                },
                "timestamp": 1686000227,
                "content": "thanks for the quick work on this alcooper@ (and the very thorough merge questionnaire responses); fix performance on canary looks good so far as well \n\n115 and 114 merges approved, please merge this fix to 115, branch 5790, by EOD tomorrow / Tuesday 6 June so this fix can be included in the next M115 beta release\nplease merge this fix to 114/branch 5735 by 10am Pacific Friday, 9 June so this fix can be included in the next 114/Stable respin ",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Merge-Review-114 -Merge-Review-115 Merge-Approved-115 Merge-Approved-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 17,
                "commenter": {
                    "userId": "319881749",
                    "displayName": "glazunov@google.com"
                },
                "timestamp": 1686001721,
                "content": "The original reproduction case no longer causes a crash and instead hits the check introduced by the fix. Unfortunately, the bug can still be triggered by precisely timing the second `OpenXrDevice::RequestSession` call after the callback is moved from `request_session_callback_` for execution in the service process but before  `RequestSession` callback function `BrowserXRRuntimeImpl::OnRequestSessionResult` runs in the browser process. During that short period, both the service- and browser-side \"existing immersive session\" checks will be inactive.\n\nSample crash report: http://crash/153edd90f93bf3ff\n\nNote that the new race window is much narrower, so reproducing the bug might take a long time.\n\n```\n<body>\n<script>\nh1 = document.body.appendChild(document.createElement(\"h1\"));\nh1.textContent = \"Click me\";\n\nframes = [];\nfor (i = 0; i < 150; ++i) {\n  let frame = document.body.appendChild(document.createElement(\"iframe\"));\n  frame.style.opacity = frame.style.height = 0;\n  frames.push(frame);\n}\n  \nonclick = _ => {\n  navigator.xr.requestSession(\"immersive-vr\");  \n  setTimeout(_ => {\n    for (let frame of frames)\n      frame.contentWindow.navigator.xr.requestSession(\"immersive-vr\");\n  }, 400);  // This constant is machine dependent!\n}\n</script>\n</body>\n```"
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 18,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686007625,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/8c508a053a795ff497eb38db5d0d8ebf43a133ef\n\ncommit 8c508a053a795ff497eb38db5d0d8ebf43a133ef\nAuthor: Alexander Cooper <alcooper@chromium.org>\nDate: Mon Jun 05 23:26:05 2023\n\nFix DCHECK when there is already a pending xr session request\n\nIt is possible to racily force two session requests to get served to the\nsame runtime. This results in a DCHECK because we expect to only have\none outstanding request at a time. For now, this softens the DCHECK into\nsimply an immediate reject, but future work will investigate\nstrengthening the guarantees from the Browser process that we cannot\nget multiple session requests.\n\n(cherry picked from commit d51e08f0dbca5b99e3e70596e0306c8db2dc2bd6)\n\nFixed: 1450601\nChange-Id: Ic2b372a26156229092053d1734de9e62487b53ee\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4582708\nReviewed-by: Brandon Jones <bajones@chromium.org>\nCommit-Queue: Alexander Cooper <alcooper@chromium.org>\nCr-Original-Commit-Position: refs/heads/main@{#1152234}\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4590520\nAuto-Submit: Alexander Cooper <alcooper@chromium.org>\nCommit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nBot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nCr-Commit-Position: refs/branch-heads/5790@{#384}\nCr-Branched-From: 1d71a337b1f6e707a13ae074dca1e2c34905eb9f-refs/heads/main@{#1148114}\n\n[modify] https://crrev.com/8c508a053a795ff497eb38db5d0d8ebf43a133ef/device/vr/openxr/openxr_device.cc\n",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-merge-approved-115 merge-merged-5790 merge-merged-115"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 19,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686007864,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/56b1b6f8e0dd06890498fda918ef0e40891e8760\n\ncommit 56b1b6f8e0dd06890498fda918ef0e40891e8760\nAuthor: Alexander Cooper <alcooper@chromium.org>\nDate: Mon Jun 05 23:30:21 2023\n\nFix DCHECK when there is already a pending xr session request\n\nIt is possible to racily force two session requests to get served to the\nsame runtime. This results in a DCHECK because we expect to only have\none outstanding request at a time. For now, this softens the DCHECK into\nsimply an immediate reject, but future work will investigate\nstrengthening the guarantees from the Browser process that we cannot\nget multiple session requests.\n\n(cherry picked from commit d51e08f0dbca5b99e3e70596e0306c8db2dc2bd6)\n\nFixed: 1450601\nChange-Id: Ic2b372a26156229092053d1734de9e62487b53ee\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4582708\nReviewed-by: Brandon Jones <bajones@chromium.org>\nCommit-Queue: Alexander Cooper <alcooper@chromium.org>\nCr-Original-Commit-Position: refs/heads/main@{#1152234}\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4590521\nBot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nAuto-Submit: Alexander Cooper <alcooper@chromium.org>\nCommit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nCr-Commit-Position: refs/branch-heads/5735@{#1168}\nCr-Branched-From: 2f562e4ddbaf79a3f3cb338b4d1bd4398d49eb67-refs/heads/main@{#1135570}\n\n[modify] https://crrev.com/56b1b6f8e0dd06890498fda918ef0e40891e8760/device/vr/openxr/openxr_device.cc\n",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-merge-approved-114 merge-merged-5735 merge-merged-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 20,
                "commenter": {
                    "userId": "3521107390",
                    "displayName": "alcooper@chromium.org"
                },
                "timestamp": 1686007972,
                "content": "@amyressler@, I've got a followup CL in the queue for this. Do I just remove the merge-merged- labels and replace the merge-request for the new merge-request?",
                "amendments": [
                    {
                        "fieldName": "Cc",
                        "newOrDeltaValue": "amyressler@chromium.org"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 21,
                "commenter": {
                    "userId": "3521107390",
                    "displayName": "alcooper@chromium.org"
                },
                "timestamp": 1686008011,
                "content": "(This refers to Comment #17 which indicates that my prior fix was incomplete as there was an additional, harder to hit race that was also possible.)"
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 22,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686011464,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/152f1a2903a9e4120bdd2b483b5ca18fa2270c23\n\ncommit 152f1a2903a9e4120bdd2b483b5ca18fa2270c23\nAuthor: Alexander Cooper <alcooper@chromium.org>\nDate: Tue Jun 06 00:30:21 2023\n\nAdd additional check to block race condition\n\nIt is possible, though unlikely, for a second request to come through\n*after* a request has been served (e.g. the runtime is presenting and\nthe request_session_callback_ has been nulled out). This request should\nbe rejected as there is now an active immersive session; though the\nbrowser process may not know it yet. (e.g. the request got queued up\nwhile the previous request was processing and so the browser process\nwas as yet unaware of the result).\n\nFixed: 1450601\nChange-Id: Ifbad64e0f3221e3068690879d6c120347e8163a7\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4592111\nAuto-Submit: Alexander Cooper <alcooper@chromium.org>\nCommit-Queue: Alexander Cooper <alcooper@chromium.org>\nReviewed-by: Brandon Jones <bajones@chromium.org>\nCommit-Queue: Brandon Jones <bajones@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1153592}\n\n[modify] https://crrev.com/152f1a2903a9e4120bdd2b483b5ca18fa2270c23/device/vr/openxr/openxr_device.cc\n"
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 23,
                "commenter": {
                    "userId": "3767437993",
                    "displayName": "amyressler@chromium.org"
                },
                "timestamp": 1686014800,
                "content": "Thanks for following up so quickly with the latest fix. Keeping the existing merge-merged labels is fine, I've just updated this with merge-review labels for 114 and 115 so this can go back in my security merge review queue. Let's allow the new CL get some bake time on canary and I'll revisit in a couple of days for review to hopefully get this into the next 114/stable update and the following 115/beta update.",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "merge-review-115 merge-review-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 24,
                "commenter": {
                    "userId": "3767437993",
                    "displayName": "amyressler@chromium.org"
                },
                "timestamp": 1686243084,
                "content": "115 and 114 merge approved for https://chromium-review.googlesource.com/c/chromium/src/+/4592111, please merge this fix to branches 5790 and 5735 respectively\n\nfor 114 backmerge, please complete by EOD tomorrow, Friday 9 June so this fix can be included in the next M114/Stable respin -- ty! ",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Merge-Review-114 -Merge-Review-115 Merge-Approved-114 Merge-Approved-115"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 25,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686249784,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/2b3ce6ca04c4612010e3ff5d4c925da7d2d0a4fd\n\ncommit 2b3ce6ca04c4612010e3ff5d4c925da7d2d0a4fd\nAuthor: Alexander Cooper <alcooper@chromium.org>\nDate: Thu Jun 08 18:42:35 2023\n\nAdd additional check to block race condition\n\nIt is possible, though unlikely, for a second request to come through\n*after* a request has been served (e.g. the runtime is presenting and\nthe request_session_callback_ has been nulled out). This request should\nbe rejected as there is now an active immersive session; though the\nbrowser process may not know it yet. (e.g. the request got queued up\nwhile the previous request was processing and so the browser process\nwas as yet unaware of the result).\n\n(cherry picked from commit 152f1a2903a9e4120bdd2b483b5ca18fa2270c23)\n\nFixed: 1450601\nChange-Id: Ifbad64e0f3221e3068690879d6c120347e8163a7\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4592111\nAuto-Submit: Alexander Cooper <alcooper@chromium.org>\nCommit-Queue: Alexander Cooper <alcooper@chromium.org>\nReviewed-by: Brandon Jones <bajones@chromium.org>\nCommit-Queue: Brandon Jones <bajones@chromium.org>\nCr-Original-Commit-Position: refs/heads/main@{#1153592}\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4601690\nBot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nCommit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nCr-Commit-Position: refs/branch-heads/5735@{#1205}\nCr-Branched-From: 2f562e4ddbaf79a3f3cb338b4d1bd4398d49eb67-refs/heads/main@{#1135570}\n\n[modify] https://crrev.com/2b3ce6ca04c4612010e3ff5d4c925da7d2d0a4fd/device/vr/openxr/openxr_device.cc\n",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-merge-approved-114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 26,
                "commenter": {
                    "userId": "233459370",
                    "displayName": "Git Watcher"
                },
                "timestamp": 1686252844,
                "content": "The following revision refers to this bug:\n  https://chromium.googlesource.com/chromium/src/+/f669cacdeb49c0c5fbf5b13b5a4c6cb11dcee83f\n\ncommit f669cacdeb49c0c5fbf5b13b5a4c6cb11dcee83f\nAuthor: Alexander Cooper <alcooper@chromium.org>\nDate: Thu Jun 08 19:33:28 2023\n\nAdd additional check to block race condition\n\nIt is possible, though unlikely, for a second request to come through\n*after* a request has been served (e.g. the runtime is presenting and\nthe request_session_callback_ has been nulled out). This request should\nbe rejected as there is now an active immersive session; though the\nbrowser process may not know it yet. (e.g. the request got queued up\nwhile the previous request was processing and so the browser process\nwas as yet unaware of the result).\n\n(cherry picked from commit 152f1a2903a9e4120bdd2b483b5ca18fa2270c23)\n\nFixed: 1450601\nChange-Id: Ifbad64e0f3221e3068690879d6c120347e8163a7\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4592111\nAuto-Submit: Alexander Cooper <alcooper@chromium.org>\nCommit-Queue: Alexander Cooper <alcooper@chromium.org>\nReviewed-by: Brandon Jones <bajones@chromium.org>\nCommit-Queue: Brandon Jones <bajones@chromium.org>\nCr-Original-Commit-Position: refs/heads/main@{#1153592}\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4600676\nCommit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nBot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nCr-Commit-Position: refs/branch-heads/5790@{#496}\nCr-Branched-From: 1d71a337b1f6e707a13ae074dca1e2c34905eb9f-refs/heads/main@{#1148114}\n\n[modify] https://crrev.com/f669cacdeb49c0c5fbf5b13b5a4c6cb11dcee83f/device/vr/openxr/openxr_device.cc\n",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-merge-approved-115"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 27,
                "commenter": {
                    "userId": "3767437993",
                    "displayName": "amyressler@chromium.org"
                },
                "timestamp": 1686613908,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "Release-2-M114"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 28,
                "commenter": {
                    "userId": "400180463",
                    "displayName": "amyressler@google.com"
                },
                "timestamp": 1686615187,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "CVE-2023-3217 CVE_description-missing"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 29,
                "commenter": {
                    "userId": "4232789365",
                    "displayName": "pgrace@google.com"
                },
                "timestamp": 1686678682,
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-CVE_description-missing CVE_description-submitted"
                    }
                ]
            },
            {
                "projectName": "chromium",
                "localId": 1450601,
                "sequenceNum": 30,
                "commenter": {
                    "userId": "1950284618",
                    "displayName": "sheriffbot"
                },
                "timestamp": 1694194553,
                "content": "This bug has been closed for more than 14 weeks. Removing security view restrictions.\n\nFor more details visit https://www.chromium.org/issue-tracking/autotriage - Your friendly Sheriffbot",
                "amendments": [
                    {
                        "fieldName": "Labels",
                        "newOrDeltaValue": "-Restrict-View-SecurityNotify allpublic"
                    }
                ]
            }
        ]
    }
]